{"version":3,"file":"markdown-editor.cjs.development.js","sources":["../src/Editor/markdown.ts","../src/Editor/Plugins/editor.ts","../src/Editor/Plugins/paste.ts","../src/Editor/utils/markInputRule.ts","../src/Editor/utils/linkInputRule.ts","../src/Editor/utils/markdownLinkInputRule.ts","../src/Editor/utils/markIsActive.ts","../src/Editor/utils/nodeIsActive.ts","../src/Editor/utils/toggleBlockType.ts","../src/Editor/utils/toggleWrap.ts","../src/Editor/utils/toggleList.ts","../src/Editor/Plugins/menu.ts","../src/Editor/Plugins/placeholder.ts","../src/Editor/Plugins/fileUpload.ts","../src/Editor/Plugins/imageDrop.ts","../src/Editor/Plugins/highlight.ts","../src/Editor/BaseType.ts","../src/Editor/Marks/Mark.ts","../src/Editor/Marks/Strong.ts","../src/Editor/Marks/Emphasis.ts","../src/Editor/Marks/InlineCode.ts","../src/Editor/Marks/Link.ts","../src/Editor/Marks/index.ts","../src/Editor/Nodes/Node.ts","../src/Editor/Nodes/Blockquote.ts","../src/Editor/Nodes/Heading.ts","../src/Editor/Nodes/BulletList.ts","../src/Editor/Nodes/OrderedList.ts","../src/Editor/Nodes/CodeBlock.ts","../src/Editor/Nodes/index.ts","../src/Toolbar/menuItems.ts","../src/Editor/View.ts","../src/Icons/Bold.tsx","../src/Icons/Code.tsx","../src/Icons/CodeBlock.tsx","../src/Icons/Heading.tsx","../src/Icons/Image.tsx","../src/Icons/Italic.tsx","../src/Icons/OrderedList.tsx","../src/Icons/Quote.tsx","../src/Icons/UnorderedList.tsx","../src/Icons/index.ts","../src/Toolbar/Item.tsx","../src/Toolbar/ImageUpload.tsx","../src/Toolbar/index.tsx","../src/ContextualHelp/index.tsx","../src/index.tsx"],"sourcesContent":["import {\n  schema as initialSchema,\n  defaultMarkdownParser as initialDefaultMarkdownParser,\n  defaultMarkdownSerializer as initialDefaultMarkdownSerializer,\n  MarkdownParser,\n} from 'prosemirror-markdown';\nimport { Schema } from 'prosemirror-model';\nimport { omit, compact } from 'lodash';\nimport markdownit from 'markdown-it/lib';\n\nexport interface MarkdownSchema extends Schema {\n  disabledNodes: string[];\n  disabledMarks: string[];\n}\n\ndeclare module 'prosemirror-markdown' {\n  let schema: MarkdownSchema;\n}\n\nconst IGNORED_NODES = ['horizontal_rule', 'hard_break'];\nconst IGNORED_TOKENS = ['hr', 'hardbreak'];\nconst MARKDOWN_IT_RULES: { [token: string]: string } = {\n  code: 'backticks',\n  heading: 'heading',\n  blockquote: 'blockquote',\n  code_block: 'code',\n  fence: 'fence',\n  bullet_list: 'list',\n  ordered_list: 'list',\n  hr: 'hr',\n  image: 'image',\n  link: 'link',\n};\n\nconst setupSchema = ({\n  disabledMarks = [],\n  disabledNodes = [],\n}: {\n  disabledMarks?: string[];\n  disabledNodes?: string[];\n}) => {\n  if (disabledNodes.includes('code_block')) {\n    disabledNodes.push('fence');\n  } else {\n    //@ts-ignore\n    initialSchema.nodes.code_block.isolating = true;\n  }\n\n  initialSchema.nodes = omit(initialSchema.nodes, [\n    ...IGNORED_NODES,\n    ...disabledNodes,\n  ]);\n  initialSchema.marks = omit(initialSchema.marks, disabledMarks);\n\n  initialSchema.disabledNodes = disabledNodes;\n  initialSchema.disabledMarks = disabledMarks;\n  return initialSchema;\n};\n\nconst defaultMarkdownParser = (schema: MarkdownSchema) => {\n  const disabledTokens = [\n    ...IGNORED_TOKENS,\n    ...schema.disabledNodes,\n    ...schema.disabledMarks,\n  ];\n  const tokens = omit(initialDefaultMarkdownParser.tokens, disabledTokens);\n\n  const md = markdownit('commonmark', { html: false });\n  const tokensToDisable = compact(\n    disabledTokens.map(t => MARKDOWN_IT_RULES[t])\n  );\n  md.disable(tokensToDisable);\n\n  //@ts-ignore\n  return new MarkdownParser(schema, md, tokens);\n};\n\nconst defaultMarkdownSerializer = (() => {\n  initialDefaultMarkdownSerializer.nodes.code_block = (state, node) => {\n    state.write('~~~' + (node.attrs.params || '') + '\\n');\n    state.text(node.textContent, false);\n    state.ensureNewLine();\n    state.write('~~~');\n    state.closeBlock(node);\n  };\n  return initialDefaultMarkdownSerializer;\n})();\n\nexport { setupSchema, defaultMarkdownParser, defaultMarkdownSerializer };\n","import { Plugin } from 'prosemirror-state';\n\nexport const editorPlugin = (classes: string, placeholder: string) =>\n  new Plugin({\n    props: {\n      attributes: {\n        class: classes,\n        'data-placeholder': placeholder,\n      },\n    },\n  });\n","import { Plugin } from 'prosemirror-state';\nimport { Slice } from 'prosemirror-model';\nimport { defaultMarkdownParser, MarkdownSchema } from '../markdown';\n\nexport const pastePlugin = (\n  schema: MarkdownSchema,\n  onError: (errors: string) => any\n) =>\n  new Plugin({\n    props: {\n      clipboardTextParser: text => {\n        const fragment = defaultMarkdownParser(schema).parse(text).content;\n        return Slice.maxOpen(fragment);\n      },\n      transformPastedHTML: html => {\n        if (html.includes('<img src')) {\n          onError('Pasted content cannot contain images');\n          return '';\n        }\n\n        return html;\n      },\n    },\n  });\n","import { InputRule } from 'prosemirror-inputrules';\nimport { MarkType, Mark } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\n\ninterface MarkBetweenInterface {\n  start: number;\n  end: number;\n  mark: Mark;\n}\n\nconst getMarksBetween = (start: number, end: number, state: EditorState) => {\n  let marks: MarkBetweenInterface[] = [];\n\n  state.doc.nodesBetween(start, end, (node, pos) => {\n    marks = [\n      ...marks,\n      ...node.marks.map(mark => ({\n        start: pos,\n        end: pos + node.nodeSize,\n        mark,\n      })),\n    ];\n  });\n\n  return marks;\n};\n\nexport const markInputRule = function(\n  regexp: RegExp,\n  markType: MarkType,\n  getAttrs?: any\n): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const { tr } = state;\n    const m = match.length - 1;\n    let markEnd = end;\n    let markStart = start;\n\n    if (match[m]) {\n      const matchStart = start + match[0].indexOf(match[m - 1]);\n      const matchEnd = matchStart + match[m - 1].length - 1;\n      const textStart = matchStart + match[m - 1].lastIndexOf(match[m]);\n      const textEnd = textStart + match[m].length;\n\n      const excludedMarks = getMarksBetween(start, end, state)\n        .filter(item => item.mark.type.excludes(markType))\n        .filter(item => item.end > matchStart);\n\n      if (excludedMarks.length) {\n        return null;\n      }\n\n      if (textEnd < matchEnd) {\n        tr.delete(textEnd, matchEnd);\n      }\n      if (textStart > matchStart) {\n        tr.delete(matchStart, textStart);\n      }\n      markStart = matchStart;\n      markEnd = markStart + match[m].length;\n    }\n\n    tr.addMark(markStart, markEnd, markType.create(attrs));\n    tr.removeStoredMark(markType);\n    return tr;\n  });\n};\n","import { InputRule } from 'prosemirror-inputrules';\nimport { MarkType } from 'prosemirror-model';\n\nexport const linkInputRule = function(regexp: RegExp, markType: MarkType) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const tr = state.tr.insertText(match[0], start, end);\n    const mark = markType.create({ href: match[1] });\n    return tr.addMark(start, start + match[1].length, mark);\n  });\n};\n","import { InputRule } from 'prosemirror-inputrules';\nimport { MarkType } from 'prosemirror-model';\n\nexport const markdownLinkInputRule = function(\n  regexp: RegExp,\n  markType: MarkType\n) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const tr = state.tr.insertText(match[1], start, end);\n    const mark = markType.create({ href: match[2], title: match[3] });\n    return tr.addMark(start, start + match[1].length, mark);\n  });\n};\n","import { EditorState } from 'prosemirror-state';\nimport { MarkType } from 'prosemirror-model';\n\nexport const markIsActive = function(state: EditorState, type: MarkType) {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  }\n\n  return !!state.doc.rangeHasMark(from, to, type);\n};\n","import { findParentNode, findSelectedNodeOfType } from 'prosemirror-utils';\nimport { EditorState } from 'prosemirror-state';\nimport { NodeType, Node } from 'prosemirror-model';\n\nexport const nodeIsActive = function(\n  state: EditorState,\n  type: NodeType,\n  attrs = {}\n) {\n  const predicate = (node: Node) => node.type === type;\n  const node =\n    findSelectedNodeOfType(type)(state.selection) ||\n    findParentNode(predicate)(state.selection);\n\n  if (!Object.keys(attrs).length || !node) {\n    return {\n      isActive: !!node,\n      node: node?.node,\n    };\n  }\n\n  return {\n    isActive: node.node.hasMarkup(type, attrs),\n    node: node.node,\n  };\n};\n","import { setBlockType, exitCode } from 'prosemirror-commands';\nimport { NodeType, Schema } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { nodeIsActive } from './nodeIsActive';\n\nexport const toggleBlockType = function(\n  type: NodeType,\n  toggletype: NodeType,\n  schema: Schema,\n  attrs = {}\n) {\n  return (state: EditorState, dispatch: EditorView['dispatch']) => {\n    const { isActive, node } = nodeIsActive(state, type, attrs);\n\n    if (isActive) {\n      if (type === schema.nodes.code_block && node?.textContent.length) {\n        return exitCode(state, dispatch);\n      }\n      return setBlockType(toggletype)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n};\n","import { wrapIn, lift } from 'prosemirror-commands';\nimport { NodeType } from 'prosemirror-model';\nimport { nodeIsActive } from './nodeIsActive';\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\n\nexport const toggleWrap = function(type: NodeType) {\n  return (state: EditorState, dispatch: EditorView['dispatch']) => {\n    const { isActive } = nodeIsActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n};\n","import { wrapInList, liftListItem } from 'prosemirror-schema-list';\nimport { findParentNode } from 'prosemirror-utils';\nimport { EditorState } from 'prosemirror-state';\nimport { NodeType, Node, Schema } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nconst isList = (node: Node, schema: Schema) =>\n  node.type === schema.nodes.bullet_list ||\n  node.type === schema.nodes.ordered_list ||\n  node.type === schema.nodes.todo_list;\n\nexport const toggleList = function toggleList(\n  listType: NodeType,\n  itemType: NodeType\n) {\n  return (state: EditorState, dispatch: EditorView['dispatch']) => {\n    const { schema, selection } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n\n    if (!range) {\n      return false;\n    }\n\n    const parentList = findParentNode(node => isList(node, schema))(selection);\n\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n      if (parentList.node.type === listType) {\n        return liftListItem(itemType)(state, dispatch);\n      }\n\n      if (\n        isList(parentList.node, schema) &&\n        listType.validContent(parentList.node.content)\n      ) {\n        const { tr } = state;\n        tr.setNodeMarkup(parentList.pos, listType);\n\n        if (dispatch) {\n          dispatch(tr);\n        }\n\n        return false;\n      }\n    }\n\n    return wrapInList(listType)(state, dispatch);\n  };\n};\n","import { MenuItemInterface } from '../../Toolbar/MenuItemInterface';\nimport { MarkType, NodeType } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\nimport { Plugin } from 'prosemirror-state';\nimport { nodeIsActive, markIsActive } from '../utils';\n\nclass Menu {\n  items: MenuItemInterface[];\n  editorView: EditorView;\n  onUpdate: (items: string[]) => any;\n\n  constructor(\n    items: MenuItemInterface[],\n    editorView: EditorView,\n    onUpdate: (items: string[]) => any\n  ) {\n    this.items = items;\n    this.editorView = editorView;\n    this.onUpdate = onUpdate;\n  }\n\n  markActive(type: MarkType | NodeType): boolean {\n    const { state } = this.editorView;\n\n    if (type instanceof NodeType) {\n      return nodeIsActive(state, type).isActive;\n    }\n\n    return markIsActive(state, type);\n  }\n\n  update() {\n    const activeItems = this.items.filter(item => this.markActive(item.type));\n    if (activeItems.length) {\n      this.onUpdate(activeItems.map(i => i.name));\n    } else {\n      this.onUpdate([]);\n    }\n  }\n\n  destroy() {\n    this.onUpdate([]);\n  }\n}\n\nexport const menuPlugin = (\n  items: MenuItemInterface[],\n  onUpdate: (items: string[]) => any\n) =>\n  new Plugin({\n    view: editorView => new Menu(items, editorView, onUpdate),\n  });\n","import { Plugin } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nexport const placeholderPlugin = new Plugin({\n  state: {\n    init() {\n      return DecorationSet.empty;\n    },\n    apply(this: Plugin, tr, set: DecorationSet) {\n      // Adjust decoration positions to changes made by the transaction\n      set = set.map(tr.mapping, tr.doc);\n      // See if the transaction adds or removes any placeholders\n      let action = tr.getMeta(this);\n      if (action && action.add) {\n        let widget = document.createElement('div');\n        widget.className = 'image__placeholder';\n        let loader = document.createElement('div');\n        loader.className = 'loader';\n        widget.appendChild(loader);\n        let deco = Decoration.widget(action.add.pos, widget, {\n          id: action.add.id,\n        });\n        set = set.add(tr.doc, [deco]);\n      } else if (action && action.remove) {\n        set = set.remove(\n          set.find(undefined, undefined, spec => spec.id === action.remove.id)\n        );\n      }\n      return set;\n    },\n  },\n  props: {\n    decorations(this: Plugin, state) {\n      return this.getState(state);\n    },\n  },\n});\n\nexport const findPlaceholder = function(state: EditorState, id: {}) {\n  let decos = placeholderPlugin.getState(state);\n  let found = decos.find(undefined, undefined, spec => spec.id === id);\n  return found.length ? found[0].from : null;\n};\n","import { placeholderPlugin, findPlaceholder } from './placeholder';\nimport { EditorView } from 'prosemirror-view';\n\nexport const fileUpload = (\n  view: EditorView,\n  images: File[],\n  endpoint: { url: string; csrfToken: string },\n  position: number,\n  onError: (errors: string) => any\n): boolean => {\n  let id = {};\n  const confirmResult = window.confirm('I am authorised to use this content');\n  if (!confirmResult) {\n    return false;\n  }\n\n  const tr = view.state.tr;\n  tr.setMeta(placeholderPlugin, { add: { id, pos: position } });\n  tr.setSelection(tr.selection);\n  view.dispatch(tr);\n  const { schema } = view.state;\n\n  images.forEach(image => {\n    const pos = findPlaceholder(view.state, id);\n    if (!pos) return;\n    const formData = new FormData();\n    formData.append('image', image);\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.open('POST', endpoint.url, true);\n    xhr.setRequestHeader('X-CSRF-TOKEN', endpoint.csrfToken);\n    xhr.onerror = () => {\n      const transaction = view.state.tr.setMeta(placeholderPlugin, {\n        remove: { id },\n      });\n      onError('Sorry something went wrong');\n      view.dispatch(transaction);\n    };\n\n    xhr.onload = () => {\n      let transaction;\n      let jsonBody;\n      try {\n        jsonBody = JSON.parse(xhr.response);\n      } catch {\n        jsonBody = { errors: 'Sorry something went wrong' };\n      }\n      if ([200, 201].includes(xhr.status)) {\n        const node = schema.nodes.image.create({\n          src: jsonBody.data.url,\n        });\n\n        transaction = view.state.tr\n          .replaceWith(pos, pos, node)\n          .setMeta(placeholderPlugin, { remove: { id } });\n      } else {\n        transaction = view.state.tr.setMeta(placeholderPlugin, {\n          remove: { id },\n        });\n        onError(jsonBody.errors);\n      }\n      view.dispatch(transaction);\n    };\n    xhr.send(formData);\n  });\n\n  return true;\n};\n","import { Plugin } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { fileUpload } from './fileUpload';\n\nexport const imageDropPlugin = (\n  endpoint: { url: string; csrfToken: string },\n  onError: (errors: string) => any\n) =>\n  new Plugin({\n    props: {\n      handleDOMEvents: {\n        drop(view: EditorView, event: Event) {\n          const dragEvent = event as DragEvent;\n          if (!dragEvent.dataTransfer) return false;\n          const hasFiles =\n            dragEvent.dataTransfer.files && dragEvent.dataTransfer.files.length;\n          if (!hasFiles) {\n            return false;\n          }\n\n          const images = Array.from(dragEvent.dataTransfer.files).filter(file =>\n            /image/i.test(file.type)\n          );\n\n          if (images.length === 0) {\n            return false;\n          }\n\n          event.preventDefault();\n\n          const coordinates = view.posAtCoords({\n            left: dragEvent.clientX,\n            top: dragEvent.clientY,\n          });\n\n          if (!coordinates) return false;\n\n          return fileUpload(view, images, endpoint, coordinates.pos, onError);\n        },\n      },\n    },\n  });\n","import { Decoration, DecorationSet } from 'prosemirror-view';\nimport { Node, NodeType } from 'prosemirror-model';\nimport low from 'lowlight/lib/core';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport { findBlockNodes } from 'prosemirror-utils';\nimport { flattenDeep } from 'lodash';\n\n//@ts-ignore\nimport javascript from 'highlight.js/lib/languages/javascript';\n//@ts-ignore\nimport python from 'highlight.js/lib/languages/python';\n//@ts-ignore\nimport r from 'highlight.js/lib/languages/r';\n//@ts-ignore\nimport css from 'highlight.js/lib/languages/css';\n//@ts-ignore\nimport java from 'highlight.js/lib/languages/java';\n\ninterface LanguageInterface {\n  language: string;\n  pos: number;\n  type: NodeType;\n}\n\nfunction getDecorations({ doc, name }: { doc: Node; name: string }) {\n  const decorations: Decoration[] = [];\n  const languages: LanguageInterface[] = [];\n  const blocks = findBlockNodes(doc).filter(\n    item => item.node.type.name === name\n  );\n\n  function parseNodes(nodes: lowlight.HastNode[], className = []) {\n    return nodes.map(node => {\n      const classes = [\n        ...className,\n        //@ts-ignore\n        ...(node.properties ? node.properties.className : []),\n      ];\n\n      //@ts-ignore\n      if (node.children) {\n        //@ts-ignore\n        return parseNodes(node.children, classes);\n      }\n\n      return {\n        //@ts-ignore\n        text: node.value,\n        classes,\n      };\n    });\n  }\n\n  blocks.forEach(block => {\n    let startPos = block.pos + 1;\n    const { value: nodes, language, relevance } = low.highlightAuto(\n      block.node.textContent\n    );\n\n    if (relevance > 1) {\n      if (language && language !== block.node.attrs.params) {\n        languages.push({ language, pos: block.pos, type: block.node.type });\n      }\n\n      flattenDeep(parseNodes(nodes))\n        .map(node => {\n          const from = startPos;\n          const to = from + node.text.length;\n\n          startPos = to;\n\n          return {\n            ...node,\n            from,\n            to,\n          };\n        })\n        .forEach(node => {\n          const decoration = Decoration.inline(node.from, node.to, {\n            class: node.classes.join(' '),\n          });\n          decorations.push(decoration);\n        });\n    }\n  });\n\n  return { decorations: DecorationSet.create(doc, decorations), languages };\n}\n\nexport const highlightPlugin = ({ name }: { name: string }) => {\n  low.registerLanguage('javascript', javascript);\n  low.registerLanguage('python', python);\n  low.registerLanguage('r', r);\n  low.registerLanguage('css', css);\n  low.registerLanguage('java', java);\n  return new Plugin({\n    key: new PluginKey('highlight'),\n    state: {\n      init: (_, { doc }) => getDecorations({ doc, name }),\n      apply: (transaction, decorationSet, oldState, state) => {\n        const nodeName = state.selection.$head.parent.type.name;\n        const previousNodeName = oldState.selection.$head.parent.type.name;\n\n        if (\n          transaction.docChanged &&\n          [nodeName, previousNodeName].includes(name)\n        ) {\n          return getDecorations({ doc: transaction.doc, name });\n        }\n\n        const decorations = decorationSet.decorations || decorationSet;\n        return decorations.map(transaction.mapping, transaction.doc);\n      },\n    },\n    props: {\n      decorations(this: Plugin, state) {\n        const decorationSet = this.getState(state);\n        return decorationSet.decorations || decorationSet;\n      },\n    },\n    view: _view => {\n      return {\n        update: (view, prevState) => {\n          const languages =\n            //@ts-ignore\n            prevState.highlight$ &&\n            //@ts-ignore\n            (prevState.highlight$.languages as LanguageInterface[]);\n          if (languages && languages.length) {\n            languages.forEach(lang => {\n              const transaction = view.state.tr.setNodeMarkup(\n                lang.pos,\n                lang.type,\n                { params: lang.language }\n              );\n              view.dispatch(transaction);\n            });\n          }\n        },\n      };\n    },\n  });\n};\n","import { Schema, MarkType, NodeType } from 'prosemirror-model';\nimport { keymap } from 'prosemirror-keymap';\nimport { inputRules, InputRule } from 'prosemirror-inputrules';\n\nclass BaseType {\n  schema: Schema;\n  constructor(schema: Schema) {\n    this.schema = schema;\n  }\n\n  get name() {\n    return '';\n  }\n\n  get icon() {\n    return '';\n  }\n\n  get inToolbar() {\n    return true;\n  }\n\n  get command() {\n    return (_state: any, _dispatch: any) => {};\n  }\n\n  get shortcuts() {\n    return {};\n  }\n\n  get rules() {\n    return [] as InputRule[];\n  }\n\n  get type(): MarkType | NodeType | null {\n    return this._type;\n  }\n\n  protected get _type(): MarkType | NodeType | null {\n    return null;\n  }\n\n  getPlugins() {\n    if (this._type) {\n      return [keymap(this.shortcuts), inputRules({ rules: this.rules })];\n    }\n\n    return [];\n  }\n\n  getToolbarItem() {\n    if (this._type && this.inToolbar && this.command) {\n      return {\n        name: this.name,\n        icon: this.icon,\n        command: this.command,\n        type: this.type,\n      };\n    }\n\n    return null;\n  }\n}\n\nexport default BaseType;\n","import { MarkType } from 'prosemirror-model';\nimport BaseType from '../BaseType';\n\nclass Mark extends BaseType {\n  get type(): MarkType {\n    return this._type as MarkType;\n  }\n\n  protected get _type() {\n    return this.schema.marks[this.name];\n  }\n}\n\nexport default Mark;\n","import { toggleMark } from 'prosemirror-commands';\nimport { markInputRule } from '../utils';\nimport Mark from './Mark';\n\nclass Strong extends Mark {\n  get name() {\n    return 'strong';\n  }\n\n  get icon() {\n    return 'Bold';\n  }\n\n  get command() {\n    return toggleMark(this.type);\n  }\n\n  get shortcuts() {\n    return {\n      'Mod-b': toggleMark(this.type),\n      'Mod-B': toggleMark(this.type),\n    };\n  }\n\n  get rules() {\n    return [markInputRule(/(?:\\*\\*|__)([^*_]+)(?:\\*\\*|__)$/, this.type)];\n  }\n}\n\nexport default Strong;\n","import { toggleMark } from 'prosemirror-commands';\nimport { markInputRule } from '../utils';\nimport Mark from './Mark';\n\nclass Emphasis extends Mark {\n  get name() {\n    return 'em';\n  }\n\n  get icon() {\n    return 'Italic';\n  }\n\n  get shortcuts() {\n    return {\n      'Mod-i': toggleMark(this.type),\n      'Mod-I': toggleMark(this.type),\n    };\n  }\n\n  get rules() {\n    return [\n      markInputRule(/(?:^|[^_])(_([^_]+)_)$/, this.type),\n      markInputRule(/(?:^|[^*])(\\*([^*]+)\\*)$/, this.type),\n    ];\n  }\n\n  get command() {\n    return toggleMark(this.type);\n  }\n}\n\nexport default Emphasis;\n","import { toggleMark } from 'prosemirror-commands';\nimport { markInputRule } from '../utils';\nimport Mark from './Mark';\n\nclass InlineCode extends Mark {\n  get name() {\n    return 'code';\n  }\n\n  get icon() {\n    return 'Code';\n  }\n\n  get shortcuts() {\n    return {\n      'Mod-`': toggleMark(this.type),\n    };\n  }\n\n  get rules() {\n    return [markInputRule(/(?:`)([^`]+)(?:`)$/, this.type)];\n  }\n\n  get command() {\n    return toggleMark(this.type);\n  }\n}\n\nexport default InlineCode;\n","import { linkInputRule, markdownLinkInputRule } from '../utils';\nimport Mark from './Mark';\n\nconst URL_REGEX = /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*))\\s$/g;\nconst MARKDOWN_URL_REGX = /\\[(.+)\\]\\((https?[^ ]+)(?: \"(.+)\")?\\)$/;\n\nclass Link extends Mark {\n  get name() {\n    return 'link';\n  }\n\n  get rules() {\n    return [\n      linkInputRule(URL_REGEX, this.type),\n      markdownLinkInputRule(MARKDOWN_URL_REGX, this.type),\n    ];\n  }\n\n  get inToolbar() {\n    return false;\n  }\n}\n\nexport default Link;\n","import Strong from './Strong';\nimport Emphasis from './Emphasis';\nimport InlineCode from './InlineCode';\nimport Link from './Link';\nimport { flatMap, compact } from 'lodash';\nimport { Schema } from 'prosemirror-model';\n\nconst MARKS = [Strong, Emphasis, InlineCode, Link];\n\nexport const plugins = (schema: Schema) => {\n  return flatMap(MARKS, Mark => new Mark(schema).getPlugins());\n};\n\nexport const toolbarItems = (schema: Schema) => {\n  return compact(MARKS.map(Mark => new Mark(schema).getToolbarItem()));\n};\n","import { NodeType } from 'prosemirror-model';\nimport BaseType from '../BaseType';\n\nclass Node extends BaseType {\n  get type(): NodeType {\n    return this._type as NodeType;\n  }\n\n  protected get _type() {\n    return this.schema.nodes[this.name];\n  }\n\n  get paragraphType() {\n    return this.schema.nodes.paragraph;\n  }\n\n  get listItemType() {\n    return this.schema.nodes.list_item;\n  }\n}\n\nexport default Node;\n","import { wrappingInputRule } from 'prosemirror-inputrules';\nimport { toggleWrap } from '../utils';\nimport Node from './Node';\n\nclass Blockquote extends Node {\n  get name() {\n    return 'blockquote';\n  }\n\n  get icon() {\n    return 'Quote';\n  }\n\n  get command() {\n    return toggleWrap(this.type);\n  }\n\n  get rules() {\n    return [wrappingInputRule(/^\\s*>\\s$/, this.type)];\n  }\n}\n\nexport default Blockquote;\n","import { textblockTypeInputRule } from 'prosemirror-inputrules';\nimport { toggleBlockType } from '../utils';\nimport Node from './Node';\n\nconst LEVELS = [1, 2, 3, 4, 5, 6];\n\nclass Heading extends Node {\n  get name() {\n    return 'heading';\n  }\n\n  get icon() {\n    return 'Heading';\n  }\n\n  get command() {\n    return toggleBlockType(this.type, this.paragraphType, this.schema);\n  }\n\n  get rules() {\n    return LEVELS.map(l =>\n      textblockTypeInputRule(new RegExp(`^(#{1,${l}})\\\\s$`), this.type, () => ({\n        level: l,\n      }))\n    );\n  }\n}\n\nexport default Heading;\n","import { wrappingInputRule } from 'prosemirror-inputrules';\nimport { toggleList } from '../utils';\nimport Node from './Node';\n\nclass BulletList extends Node {\n  get name() {\n    return 'bullet_list';\n  }\n\n  get icon() {\n    return 'UnorderedList';\n  }\n\n  get command() {\n    return toggleList(this.type, this.listItemType);\n  }\n\n  get rules() {\n    return [wrappingInputRule(/^\\s*([-+*])\\s$/, this.type)];\n  }\n}\n\nexport default BulletList;\n","import { wrappingInputRule } from 'prosemirror-inputrules';\nimport { toggleList } from '../utils';\nimport Node from './Node';\n\nclass OrderedList extends Node {\n  get name() {\n    return 'ordered_list';\n  }\n\n  get icon() {\n    return 'OrderedList';\n  }\n\n  get command() {\n    return toggleList(this.type, this.listItemType);\n  }\n\n  get rules() {\n    return [\n      wrappingInputRule(\n        /^(\\d+)\\.\\s$/,\n        this.type,\n        match => ({ order: +match[1] }),\n        (match, node) => node.childCount + node.attrs.order === +match[1]\n      ),\n    ];\n  }\n}\n\nexport default OrderedList;\n","import { textblockTypeInputRule } from 'prosemirror-inputrules';\nimport { toggleBlockType } from '../utils';\nimport Node from './Node';\n\nclass CodeBlock extends Node {\n  get name() {\n    return 'code_block';\n  }\n\n  get icon() {\n    return 'CodeBlock';\n  }\n\n  get command() {\n    return toggleBlockType(this.type, this.paragraphType, this.schema);\n  }\n\n  get rules() {\n    return [textblockTypeInputRule(/^(```|~~~)$/, this.type)];\n  }\n}\n\nexport default CodeBlock;\n","import Blockquote from './Blockquote';\nimport Heading from './Heading';\nimport BulletList from './BulletList';\nimport OrderedList from './OrderedList';\nimport CodeBlock from './CodeBlock';\nimport { flatMap, compact } from 'lodash';\nimport { Schema } from 'prosemirror-model';\n\nconst NODES = [Blockquote, Heading, BulletList, OrderedList, CodeBlock];\n\nexport const plugins = (schema: Schema) => {\n  return flatMap(NODES, Node => new Node(schema).getPlugins());\n};\n\nexport const toolbarItems = (schema: Schema) => {\n  return compact(NODES.map(Node => new Node(schema).getToolbarItem()));\n};\n","import { MenuItemInterface } from './MenuItemInterface';\nimport { toolbarItems as markToolbarItems } from '../Editor/Marks';\nimport { toolbarItems as nodeToolbarItems } from '../Editor/Nodes';\nimport { Schema } from 'prosemirror-model';\n\nconst menuItems = (schema: Schema) =>\n  [\n    ...markToolbarItems(schema),\n    ...nodeToolbarItems(schema),\n  ] as MenuItemInterface[];\n\nexport default menuItems;\n","import { CreateEditorViewOptionsInterface } from './CreateEditorViewOptionsInterface';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport {\n  defaultMarkdownParser,\n  defaultMarkdownSerializer,\n  setupSchema,\n} from './markdown';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap, exitCode, setBlockType } from 'prosemirror-commands';\nimport { history, undo, redo } from 'prosemirror-history';\nimport { splitListItem } from 'prosemirror-schema-list';\nimport {\n  editorPlugin,\n  pastePlugin,\n  menuPlugin,\n  imageDropPlugin,\n  placeholderPlugin,\n  highlightPlugin,\n} from './Plugins';\nimport toolbarItems from '../Toolbar/menuItems';\nimport { plugins as markPlugins } from './Marks';\nimport { plugins as nodePlugins } from './Nodes';\n\nconst createEditorView = ({\n  node,\n  value,\n  onChange,\n  classes,\n  placeholder,\n  onToolbarChange,\n  imageUploadEndpoint,\n  disabledMarks,\n  disabledNodes,\n  onError,\n}: CreateEditorViewOptionsInterface): EditorView => {\n  const schema = setupSchema({ disabledMarks, disabledNodes });\n  const LIST_ITEM_TYPE = schema.nodes.list_item;\n  const toggleBlockIfEmpty = (\n    state: EditorState,\n    dispatch: EditorView['dispatch']\n  ) => {\n    let {\n      $from: { parent },\n    } = state.selection;\n    if ([schema.nodes.heading, schema.nodes.code_block].includes(parent.type)) {\n      if (!parent.textContent.length) {\n        setBlockType(schema.nodes.paragraph)(state, dispatch);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const plugins = [\n    history(),\n    keymap({\n      'Mod-z': undo,\n      'Mod-y': redo,\n      Enter: splitListItem(LIST_ITEM_TYPE),\n      Backspace: toggleBlockIfEmpty,\n    }),\n    keymap({\n      'Shift-Enter': exitCode,\n    }),\n    keymap(baseKeymap),\n    pastePlugin(schema, onError),\n    menuPlugin(toolbarItems(schema), onToolbarChange),\n    ...markPlugins(schema),\n    ...nodePlugins(schema),\n    editorPlugin(classes, placeholder),\n  ];\n\n  schema.nodes.code_block &&\n    plugins.push(highlightPlugin({ name: schema.nodes.code_block.name }));\n\n  imageUploadEndpoint &&\n    schema.nodes.image &&\n    plugins.push(\n      placeholderPlugin,\n      imageDropPlugin(imageUploadEndpoint, onError)\n    );\n\n  const editorView = new EditorView(node, {\n    state: EditorState.create({\n      schema,\n      doc: defaultMarkdownParser(schema).parse(value),\n      plugins,\n    }),\n    dispatchTransaction(transation: Transaction) {\n      const newState = editorView.state.apply(transation);\n      editorView.updateState(newState);\n      onChange(defaultMarkdownSerializer.serialize(editorView.state.doc));\n    },\n  });\n\n  return editorView;\n};\n\nexport { createEditorView };\n","import React from 'react';\n\nconst Bold = () => (\n  <svg className=\"a-svg-icon a-svg-icon--bold\" viewBox=\"0 0 32 32\">\n    <path\n      d=\"M24.2,17.4c-0.9-0.9-2-1.7-3.3-2.1c1.8-1,3.6-3,3.6-6.7c0-0.1,0.2-3.5-2.1-5.9C20.8,0.9,18.5,0,15.5,0H9v0H7\n  v32h0.8v0H16c0.1,0,0.1,0,0.2,0c1.5,0,5.3-0.1,7.8-2.6c1.5-1.5,2.3-3.6,2.3-6.1C26.3,22.8,26.4,19.8,24.2,17.4z M15.5,2\n  c2.4,0,4.2,0.6,5.4,1.9c1.7,1.8,1.6,4.4,1.6,4.5c0,2.6-1,4.3-3,5.3c-1.1,0.5-2.4,0.8-4,0.8H9V2H15.5z M24.2,23.1l0,0.1\n  c0,2-0.6,3.6-1.7,4.8c-2,2-5.5,2-6.6,2H9V16.5h6.8c3.2-0.1,5.5,0.7,6.9,2.2C24.4,20.6,24.2,23.1,24.2,23.1z\"\n    />\n  </svg>\n);\n\nexport default Bold;\n","import React from 'react';\n\nconst Code = () => (\n  <svg className=\"a-svg-icon a-svg-icon--code\" viewBox=\"0 0 32 32\">\n    <polygon points=\"13.1,6.7 11.6,5.3 1,16 11.7,26.7 13.1,25.3 3.8,16 \" />\n    <polygon points=\"20.4,5.3 19,6.7 28.2,16 19,25.3 20.4,26.7 31,16 \" />\n  </svg>\n);\n\nexport default Code;\n","import React from 'react';\n\nconst CodeBlock = () => (\n  <svg viewBox=\"0 0 32 32\">\n    <path\n      fill=\"#3A343A\"\n      d=\"M11.97,1.02L10.69,1v0C10.47,1,8.7,0.85,7.48,1.96c-0.6,0.55-0.92,1.31-0.92,2.2v9.66  c0,0.42-0.15,0.6-0.27,0.72C5.77,15.06,3.97,15,3.97,15v2c0,0,1.79-0.07,2.33,0.46c0.12,0.12,0.27,0.3,0.27,0.72v9.66  c0,0.89,0.32,1.65,0.92,2.2C8.7,31.15,10.47,31,10.69,31v0l1.28-0.02V29L10.69,29c-0.33,0.02-1.38,0-1.86-0.44  c-0.12-0.11-0.27-0.3-0.27-0.72v-9.66c0-0.87-0.31-1.63-0.9-2.18c0.58-0.55,0.9-1.31,0.9-2.18V4.16c0-0.42,0.14-0.61,0.27-0.72  C9.31,2.99,10.36,2.97,10.69,3v0L11.97,3V1.02z\"\n    />\n    <path\n      fill=\"#3A343A\"\n      d=\"M19.98,1.02L21.26,1v0c0.22,0,1.99-0.15,3.21,0.97c0.6,0.55,0.92,1.31,0.92,2.2v9.66  c0,0.42,0.15,0.6,0.27,0.72c0.52,0.52,2.33,0.46,2.33,0.46v2c0,0-1.79-0.07-2.33,0.46c-0.12,0.12-0.27,0.3-0.27,0.72v9.66  c0,0.89-0.32,1.65-0.92,2.2C23.25,31.15,21.49,31,21.26,31v0l-1.28-0.02V29L21.26,29c0.33,0.02,1.38,0,1.86-0.44  c0.12-0.11,0.27-0.3,0.27-0.72v-9.66c0-0.87,0.31-1.63,0.9-2.18c-0.58-0.55-0.9-1.31-0.9-2.18V4.16c0-0.42-0.14-0.61-0.27-0.72  C22.64,2.99,21.59,2.97,21.26,3v0L19.98,3V1.02z\"\n    />\n  </svg>\n);\n\nexport default CodeBlock;\n","import React from 'react';\n\nconst Heading = () => (\n  <svg className=\"a-svg-icon a-svg-icon--heading\" viewBox=\"0 0 32 32\">\n    <polygon points=\"25,0 25,15 7,15 7,0 5,0 5,32 7,32 7,17 25,17 25,32 27,32 27,0 \" />\n  </svg>\n);\n\nexport default Heading;\n","import React from 'react';\n\nconst Image = () => (\n  <svg className=\"a-svg-icon a-svg-icon--italic\" viewBox=\"0 0 32 32\">\n    <circle cx=\"21.5\" cy=\"11.5\" r=\"4.5\" />\n    <polygon points=\"32,6 32,0 0,0 0,32 32,32 32,11 30,11 30,30 16,20 2,30 2,2 30,2 30,6\" />\n  </svg>\n);\n\nexport default Image;\n","import React from 'react';\n\nconst Italic = () => (\n  <svg className=\"a-svg-icon a-svg-icon--italic\" viewBox=\"0 0 32 32\">\n    <polygon points=\"25.3,2 25.3,0 13.3,0 13.3,2 18.1,2 12.2,30 7,30 7,32 19,32 19,30 14.2,30 20.1,2 \" />\n  </svg>\n);\n\nexport default Italic;\n","import React from 'react';\n\nconst OrderedList = () => (\n  <svg className=\"a-svg-icon a-svg-icon--ordered-list\" viewBox=\"0 0 32 32\">\n    <rect x=\"10\" y=\"3\" width=\"22\" height=\"2\" />\n    <rect x=\"10\" y=\"15\" width=\"22\" height=\"2\" />\n    <rect x=\"10\" y=\"27\" width=\"22\" height=\"2\" />\n    <path\n      d=\"M3.8,25.1c-1,0-1.3,0.8-1.3,0.8l-1.3-0.7c0,0,0.7-1.6,2.7-1.6c1.5,0,2.9,0.8,2.9,2.4c0,1.1-0.9,1.4-0.9,1.4\n    s1,0.4,1,1.7c0,1.6-1.4,2.4-2.9,2.4c-2.2,0-2.8-1.8-2.8-1.8l1.4-0.8c0,0,0.3,1.1,1.4,1.1c0.7,0,1-0.4,1-0.9c0-0.6-0.5-0.9-1.3-0.9\n    H3.3v-1.3h0.3c0.6,0,1.3-0.2,1.3-0.9C4.9,25.5,4.5,25.1,3.8,25.1z\"\n    />\n    <path\n      d=\"M4.1,16C4.4,15.6,5,15,5,14.3c0-0.6-0.5-1.1-1.2-1.1c-1,0-1.3,1.1-1.3,1.1L1,13.8c0,0,0.6-2.3,2.8-2.3\n    c2,0,3,1.4,3,2.7c0,0.8-0.4,1.5-0.6,1.7L4.7,18h2.2v1.6H1.1L4.1,16z\"\n    />\n    <path d=\"M4.4,0.6H6v7.9H4.2V2.9L2.4,4.5l-1-1.3L4.4,0.6z\" />\n  </svg>\n);\n\nexport default OrderedList;\n","import React from 'react';\n\nconst Quote = () => (\n  <svg className=\"a-svg-icon a-svg-icon--quote\" viewBox=\"0 0 32 32\">\n    <path d=\"M11.1,26V15.9H5.6C6,12.3,8.3,9.5,12,9.5V5.8c-5.8,0-10.5,4.4-11,10.1l0,0V26H11.1z\" />\n    <path d=\"M20.9,5.8v10.1h5.5c-0.5,3.6-2.7,6.4-6.4,6.4V26c5.8,0,10.5-4.4,11-10.1l0,0V5.8L20.9,5.8z\" />\n  </svg>\n);\n\nexport default Quote;\n","import React from 'react';\n\nconst UnorderedList = () => (\n  <svg className=\"a-svg-icon a-svg-icon--unordered-list\" viewBox=\"0 0 32 32\">\n    <circle cx=\"2.5\" cy=\"4\" r=\"2.5\" />\n    <circle cx=\"2.5\" cy=\"16\" r=\"2.5\" />\n    <circle cx=\"2.5\" cy=\"28\" r=\"2.5\" />\n    <rect x=\"8\" y=\"3\" width=\"24\" height=\"2\" />\n    <rect x=\"8\" y=\"15\" width=\"24\" height=\"2\" />\n    <rect x=\"8\" y=\"27\" width=\"24\" height=\"2\" />\n  </svg>\n);\n\nexport default UnorderedList;\n","import { IconsInterface } from './IconsInterface';\nimport Bold from './Bold';\nimport Code from './Code';\nimport CodeBlock from './CodeBlock';\nimport Heading from './Heading';\nimport Image from './Image';\nimport Italic from './Italic';\nimport OrderedList from './OrderedList';\nimport Quote from './Quote';\nimport UnorderedList from './UnorderedList';\n\nconst Icons: IconsInterface = {\n  Bold,\n  Code,\n  CodeBlock,\n  Heading,\n  Image,\n  Italic,\n  OrderedList,\n  Quote,\n  UnorderedList,\n};\n\nexport default Icons;\n","import React, { FunctionComponent } from 'react';\nimport { ToolbarItemInterface } from './ToolbarItemInterface';\nimport classNames from 'classnames';\nimport Icons from '../Icons';\n\nconst Item: FunctionComponent<ToolbarItemInterface> = ({\n  icon,\n  isActive,\n  onClick,\n  name,\n}) => {\n  const Icon = Icons[icon];\n  return (\n    <button\n      className={classNames('item', { 'item--active': isActive })}\n      data-item={name}\n      onClick={onClick}\n      type=\"button\"\n    >\n      <Icon />\n    </button>\n  );\n};\n\nexport default Item;\n","import React, { ChangeEvent } from 'react';\nimport { fileUpload } from '../Editor/Plugins/fileUpload';\nimport Icons from '../Icons';\n\nconst ImageUpload = ({\n  editor,\n  imageUploadEndpoint,\n  onError,\n}: {\n  editor: any;\n  imageUploadEndpoint: any;\n  onError: any;\n}) => {\n  const onImageUpload = (e: ChangeEvent) => {\n    if (!imageUploadEndpoint) return;\n    if (!editor) return;\n    if (!e.target) return;\n    const target = e.target as HTMLInputElement;\n    if (!target.files) return;\n\n    e.preventDefault();\n\n    fileUpload(\n      editor,\n      Array.from(target.files),\n      imageUploadEndpoint,\n      editor.state.tr.selection.from,\n      onError\n    );\n    editor.focus();\n    target.value = '';\n  };\n\n  return (\n    <div className=\"fileUploadWrapper\">\n      <button data-item=\"image\" className=\"item\">\n        <Icons.Image />\n      </button>\n      <input\n        type=\"file\"\n        accept=\".jpg,.jpeg,.png,.gif\"\n        onChange={onImageUpload}\n      />\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useMemo } from 'react';\nimport Item from './Item';\nimport { FunctionComponent } from 'react';\nimport menuItems from './menuItems';\nimport { ToolbarInterface } from './ToolbarInterface';\nimport ImageUpload from './ImageUpload';\n\nconst Toolbar: FunctionComponent<ToolbarInterface> = ({\n  onClick,\n  activeOptions,\n  editor,\n  imageUploadEndpoint,\n  disabledItems = [],\n  onError,\n}) => {\n  const menuItemsToRender = useMemo(() => {\n    return menuItems(editor.state.schema).filter(\n      i => !disabledItems.includes(i.name)\n    );\n  }, [disabledItems, editor.state.schema]);\n\n  return (\n    <div className=\"toolbar\">\n      {menuItemsToRender.map(item => (\n        <Item\n          key={item.name}\n          icon={item.icon}\n          name={item.name}\n          onClick={() => onClick(item)}\n          isActive={activeOptions.includes(item.name)}\n        />\n      ))}\n\n      {!disabledItems.includes('image') && (\n        <ImageUpload\n          editor={editor}\n          imageUploadEndpoint={imageUploadEndpoint}\n          onError={onError}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React, { FunctionComponent } from 'react';\nimport { ContextualHelpInterface } from './ContextualHelpInterface';\n\nconst ContextualHelp: FunctionComponent<ContextualHelpInterface> = ({\n  activeOptions,\n}) => {\n  const helpText: { [key: string]: string } = {\n    code_block: 'Hold down shift and press enter to exit the code block',\n  };\n\n  return <p>{activeOptions.map(o => helpText[o])}</p>;\n};\n\nexport default ContextualHelp;\n","import React, { FunctionComponent, useEffect, useRef, useState } from 'react';\nimport { MarkdownEditorInterface } from './MarkdownEditorInterface';\nimport { createEditorView } from './Editor';\nimport { EditorView } from 'prosemirror-view';\nimport Toolbar from './Toolbar';\nimport { MenuItemInterface } from './Toolbar/MenuItemInterface';\nimport './index.scss';\nimport classNames from 'classnames';\nimport ContextualHelp from './ContextualHelp';\n\nconst MarkDownEditor: FunctionComponent<MarkdownEditorInterface> = ({\n  id,\n  name,\n  onChange = () => {},\n  value = '',\n  placeholder = 'Enter text',\n  classes = 'rich-text-editor',\n  imageUploadEndpoint,\n  onError = () => {},\n  disabledMarks = [],\n  disabledNodes = [],\n}) => {\n  const editorRef = useRef<HTMLDivElement>(null);\n  const [editor, setEditor] = useState<EditorView | null>(null);\n  const [markdownValue, setMarkdownValue] = useState<string>(value);\n  const [activeOptions, setActiveOptions] = useState<string[]>([]);\n\n  const onInputChange = (md: string) => {\n    setMarkdownValue(md);\n    onChange(md);\n  };\n\n  const initEditor = () => {\n    if (editorRef.current) {\n      const editorView = createEditorView({\n        node: editorRef.current,\n        value,\n        onChange: onInputChange,\n        classes,\n        placeholder,\n        onToolbarChange: options => setActiveOptions(options),\n        imageUploadEndpoint,\n        onError: onError,\n        disabledNodes,\n        disabledMarks,\n      });\n\n      setEditor(editorView);\n    }\n  };\n\n  const onToolbarClick = ({ command }: MenuItemInterface) => {\n    if (editor) {\n      editor.focus();\n      command(editor.state, editor.dispatch, editor);\n    }\n  };\n\n  useEffect(() => {\n    if (value !== markdownValue && editor) {\n      editor.destroy();\n      initEditor();\n    }\n  }, [value]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    initEditor();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {editor && (\n        <Toolbar\n          activeOptions={activeOptions}\n          onClick={onToolbarClick}\n          editor={editor}\n          disabledItems={[...disabledMarks, ...disabledNodes]}\n          imageUploadEndpoint={imageUploadEndpoint}\n          onError={onError}\n        />\n      )}\n      <div\n        id={id}\n        className={classNames({ hasPlaceholder: !markdownValue.length })}\n        ref={editorRef}\n      />\n      <ContextualHelp activeOptions={activeOptions} />\n      <input\n        type=\"hidden\"\n        value={markdownValue}\n        onChange={() => {}}\n        name={name}\n      />\n    </>\n  );\n};\n\nexport default MarkDownEditor;\n"],"names":["IGNORED_NODES","IGNORED_TOKENS","MARKDOWN_IT_RULES","code","heading","blockquote","code_block","fence","bullet_list","ordered_list","hr","image","link","setupSchema","disabledMarks","disabledNodes","includes","push","initialSchema","nodes","isolating","omit","marks","defaultMarkdownParser","schema","disabledTokens","tokens","initialDefaultMarkdownParser","md","markdownit","html","tokensToDisable","compact","map","t","disable","MarkdownParser","defaultMarkdownSerializer","initialDefaultMarkdownSerializer","state","node","write","attrs","params","text","textContent","ensureNewLine","closeBlock","editorPlugin","classes","placeholder","Plugin","props","attributes","pastePlugin","onError","clipboardTextParser","fragment","parse","content","Slice","maxOpen","transformPastedHTML","getMarksBetween","start","end","doc","nodesBetween","pos","mark","nodeSize","markInputRule","regexp","markType","getAttrs","InputRule","match","Function","tr","m","length","markEnd","markStart","matchStart","indexOf","matchEnd","textStart","lastIndexOf","textEnd","excludedMarks","filter","item","type","excludes","addMark","create","removeStoredMark","linkInputRule","insertText","href","markdownLinkInputRule","title","markIsActive","selection","from","$from","to","empty","isInSet","storedMarks","rangeHasMark","nodeIsActive","predicate","findSelectedNodeOfType","findParentNode","Object","keys","isActive","hasMarkup","toggleBlockType","toggletype","dispatch","exitCode","setBlockType","toggleWrap","lift","wrapIn","isList","todo_list","toggleList","listType","itemType","$to","range","blockRange","parentList","depth","liftListItem","validContent","setNodeMarkup","wrapInList","Menu","items","editorView","onUpdate","markActive","NodeType","update","activeItems","i","name","destroy","menuPlugin","view","placeholderPlugin","init","DecorationSet","apply","set","mapping","action","getMeta","add","widget","document","createElement","className","loader","appendChild","deco","Decoration","id","remove","find","undefined","spec","decorations","getState","findPlaceholder","decos","found","fileUpload","images","endpoint","position","confirmResult","window","confirm","setMeta","setSelection","forEach","formData","FormData","append","xhr","XMLHttpRequest","withCredentials","open","url","setRequestHeader","csrfToken","onerror","transaction","onload","jsonBody","JSON","response","errors","status","src","data","replaceWith","send","imageDropPlugin","handleDOMEvents","drop","event","dragEvent","dataTransfer","hasFiles","files","Array","file","test","preventDefault","coordinates","posAtCoords","left","clientX","top","clientY","getDecorations","languages","blocks","findBlockNodes","parseNodes","properties","children","value","block","startPos","low","highlightAuto","language","relevance","flattenDeep","decoration","inline","join","highlightPlugin","registerLanguage","javascript","python","r","css","java","key","PluginKey","_","decorationSet","oldState","nodeName","$head","parent","previousNodeName","docChanged","_view","prevState","highlight$","lang","BaseType","getPlugins","_type","keymap","shortcuts","inputRules","rules","getToolbarItem","inToolbar","command","icon","_state","_dispatch","Mark","Strong","toggleMark","Emphasis","InlineCode","URL_REGEX","MARKDOWN_URL_REGX","Link","MARKS","plugins","flatMap","toolbarItems","Node","paragraph","list_item","Blockquote","wrappingInputRule","LEVELS","Heading","paragraphType","l","textblockTypeInputRule","RegExp","level","BulletList","listItemType","OrderedList","order","childCount","CodeBlock","NODES","menuItems","markToolbarItems","nodeToolbarItems","createEditorView","onChange","onToolbarChange","imageUploadEndpoint","LIST_ITEM_TYPE","toggleBlockIfEmpty","history","undo","redo","Enter","splitListItem","Backspace","baseKeymap","markPlugins","nodePlugins","EditorView","EditorState","dispatchTransaction","transation","newState","updateState","serialize","Bold","React","viewBox","d","Code","points","fill","Image","cx","cy","Italic","x","y","width","height","Quote","UnorderedList","Icons","Item","onClick","Icon","classNames","ImageUpload","editor","onImageUpload","e","target","focus","accept","Toolbar","activeOptions","disabledItems","menuItemsToRender","useMemo","ContextualHelp","helpText","o","MarkDownEditor","editorRef","useRef","useState","setEditor","markdownValue","setMarkdownValue","setActiveOptions","onInputChange","initEditor","current","options","onToolbarClick","useEffect","hasPlaceholder","ref"],"mappings":"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"}