{"version":3,"file":"markdown-editor.cjs.production.min.js","sources":["../src/Editor/markdown.ts","../src/Editor/Plugins/editor.ts","../src/Editor/Plugins/paste.ts","../src/Editor/utils/markInputRule.ts","../src/Editor/utils/markdownLinkInputRule.ts","../src/Editor/utils/nodeIsActive.ts","../src/Editor/utils/toggleBlockType.ts","../src/Editor/utils/toggleList.ts","../src/Editor/Plugins/menu.ts","../src/Editor/utils/markIsActive.ts","../src/Editor/Plugins/placeholder.ts","../src/Editor/Plugins/fileUpload.ts","../src/Editor/Plugins/highlight.ts","../src/Editor/BaseType.ts","../src/Editor/Marks/Mark.ts","../src/Editor/Marks/Link.ts","../src/Editor/Marks/index.ts","../src/Editor/Marks/Strong.ts","../src/Editor/Marks/Emphasis.ts","../src/Editor/Marks/InlineCode.ts","../src/Editor/utils/linkInputRule.ts","../src/Editor/Nodes/Node.ts","../src/Editor/Nodes/Heading.ts","../src/Editor/Nodes/index.ts","../src/Editor/Nodes/Blockquote.ts","../src/Editor/utils/toggleWrap.ts","../src/Editor/Nodes/BulletList.ts","../src/Editor/Nodes/OrderedList.ts","../src/Editor/Nodes/CodeBlock.ts","../src/Toolbar/menuItems.ts","../src/Icons/index.ts","../src/Icons/Bold.tsx","../src/Icons/Code.tsx","../src/Icons/CodeBlock.tsx","../src/Icons/Heading.tsx","../src/Icons/Image.tsx","../src/Icons/Italic.tsx","../src/Icons/OrderedList.tsx","../src/Icons/Quote.tsx","../src/Icons/UnorderedList.tsx","../src/Toolbar/Item.tsx","../src/Toolbar/ImageUpload.tsx","../src/Toolbar/index.tsx","../src/ContextualHelp/index.tsx","../src/index.tsx","../src/Editor/View.ts","../src/Editor/Plugins/imageDrop.ts"],"sourcesContent":["import {\n  schema as initialSchema,\n  defaultMarkdownParser as initialDefaultMarkdownParser,\n  defaultMarkdownSerializer as initialDefaultMarkdownSerializer,\n  MarkdownParser,\n} from 'prosemirror-markdown';\nimport { Schema } from 'prosemirror-model';\nimport { omit, compact } from 'lodash';\nimport markdownit from 'markdown-it/lib';\n\nexport interface MarkdownSchema extends Schema {\n  disabledNodes: string[];\n  disabledMarks: string[];\n}\n\ndeclare module 'prosemirror-markdown' {\n  let schema: MarkdownSchema;\n}\n\nconst IGNORED_NODES = ['horizontal_rule', 'hard_break'];\nconst IGNORED_TOKENS = ['hr', 'hardbreak'];\nconst MARKDOWN_IT_RULES: { [token: string]: string } = {\n  code: 'backticks',\n  heading: 'heading',\n  blockquote: 'blockquote',\n  code_block: 'code',\n  fence: 'fence',\n  bullet_list: 'list',\n  ordered_list: 'list',\n  hr: 'hr',\n  image: 'image',\n  link: 'link',\n};\n\nconst setupSchema = ({\n  disabledMarks = [],\n  disabledNodes = [],\n}: {\n  disabledMarks?: string[];\n  disabledNodes?: string[];\n}) => {\n  if (disabledNodes.includes('code_block')) {\n    disabledNodes.push('fence');\n  } else {\n    //@ts-ignore\n    initialSchema.nodes.code_block.isolating = true;\n  }\n\n  initialSchema.nodes = omit(initialSchema.nodes, [\n    ...IGNORED_NODES,\n    ...disabledNodes,\n  ]);\n  initialSchema.marks = omit(initialSchema.marks, disabledMarks);\n\n  initialSchema.disabledNodes = disabledNodes;\n  initialSchema.disabledMarks = disabledMarks;\n  return initialSchema;\n};\n\nconst defaultMarkdownParser = (schema: MarkdownSchema) => {\n  const disabledTokens = [\n    ...IGNORED_TOKENS,\n    ...schema.disabledNodes,\n    ...schema.disabledMarks,\n  ];\n  const tokens = omit(initialDefaultMarkdownParser.tokens, disabledTokens);\n\n  const md = markdownit('commonmark', { html: false });\n  const tokensToDisable = compact(\n    disabledTokens.map(t => MARKDOWN_IT_RULES[t])\n  );\n  md.disable(tokensToDisable);\n\n  //@ts-ignore\n  return new MarkdownParser(schema, md, tokens);\n};\n\nconst defaultMarkdownSerializer = (() => {\n  initialDefaultMarkdownSerializer.nodes.code_block = (state, node) => {\n    state.write('~~~' + (node.attrs.params || '') + '\\n');\n    state.text(node.textContent, false);\n    state.ensureNewLine();\n    state.write('~~~');\n    state.closeBlock(node);\n  };\n  return initialDefaultMarkdownSerializer;\n})();\n\nexport { setupSchema, defaultMarkdownParser, defaultMarkdownSerializer };\n","import { Plugin } from 'prosemirror-state';\n\nconst EDITOR_CLASS = 'rich-text-editor';\n\nexport const editorPlugin = (classes: string, placeholder: string) =>\n  new Plugin({\n    props: {\n      attributes: {\n        class: classes.length ? `${EDITOR_CLASS} ${classes}` : EDITOR_CLASS,\n        'data-placeholder': placeholder,\n      },\n    },\n  });\n","import { Plugin } from 'prosemirror-state';\nimport { Slice } from 'prosemirror-model';\nimport { defaultMarkdownParser, MarkdownSchema } from '../markdown';\n\nexport const pastePlugin = (\n  schema: MarkdownSchema,\n  onError: (errors: string) => any\n) =>\n  new Plugin({\n    props: {\n      clipboardTextParser: text => {\n        const fragment = defaultMarkdownParser(schema).parse(text).content;\n        return Slice.maxOpen(fragment);\n      },\n      transformPastedHTML: html => {\n        if (html.includes('<img src')) {\n          onError('Pasted content cannot contain images');\n          return '';\n        }\n\n        return html;\n      },\n    },\n  });\n","import { InputRule } from 'prosemirror-inputrules';\nimport { MarkType } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkBetween } from '../../types';\n\nconst getMarksBetween = (start: number, end: number, state: EditorState) => {\n  let marks: MarkBetween[] = [];\n\n  state.doc.nodesBetween(start, end, (node, pos) => {\n    marks = [\n      ...marks,\n      ...node.marks.map(mark => ({\n        start: pos,\n        end: pos + node.nodeSize,\n        mark,\n      })),\n    ];\n  });\n\n  return marks;\n};\n\nexport const markInputRule = function(\n  regexp: RegExp,\n  markType: MarkType,\n  getAttrs?: any\n): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    const { tr } = state;\n    const m = match.length - 1;\n    let markEnd = end;\n    let markStart = start;\n\n    if (match[m]) {\n      const matchStart = start + match[0].indexOf(match[m - 1]);\n      const matchEnd = matchStart + match[m - 1].length - 1;\n      const textStart = matchStart + match[m - 1].lastIndexOf(match[m]);\n      const textEnd = textStart + match[m].length;\n\n      const excludedMarks = getMarksBetween(start, end, state)\n        .filter(item => item.mark.type.excludes(markType))\n        .filter(item => item.end > matchStart);\n\n      if (excludedMarks.length) {\n        return null;\n      }\n\n      if (textEnd < matchEnd) {\n        tr.delete(textEnd, matchEnd);\n      }\n      if (textStart > matchStart) {\n        tr.delete(matchStart, textStart);\n      }\n      markStart = matchStart;\n      markEnd = markStart + match[m].length;\n    }\n\n    tr.addMark(markStart, markEnd, markType.create(attrs));\n    tr.removeStoredMark(markType);\n    return tr;\n  });\n};\n","import { InputRule } from 'prosemirror-inputrules';\nimport { MarkType } from 'prosemirror-model';\n\nexport const markdownLinkInputRule = function(\n  regexp: RegExp,\n  markType: MarkType\n) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const tr = state.tr.insertText(match[1], start, end);\n    const mark = markType.create({ href: match[2], title: match[3] });\n    return tr.addMark(start, start + match[1].length, mark);\n  });\n};\n","import { findParentNode, findSelectedNodeOfType } from 'prosemirror-utils';\nimport { EditorState } from 'prosemirror-state';\nimport { NodeType, Node } from 'prosemirror-model';\n\nexport const nodeIsActive = function(state: EditorState, type: NodeType) {\n  const predicate = (node: Node) => node.type === type;\n  const node =\n    findSelectedNodeOfType(type)(state.selection) ||\n    findParentNode(predicate)(state.selection);\n\n  return {\n    isActive: !!node,\n    node: node?.node,\n  };\n};\n","import { setBlockType } from 'prosemirror-commands';\nimport { NodeType } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { nodeIsActive } from './nodeIsActive';\n\nexport const toggleBlockType = function(type: NodeType, toggletype: NodeType) {\n  return (state: EditorState, dispatch: EditorView['dispatch']) => {\n    const { isActive } = nodeIsActive(state, type);\n\n    if (isActive) {\n      return setBlockType(toggletype)(state, dispatch);\n    }\n\n    return setBlockType(type)(state, dispatch);\n  };\n};\n","import { wrapInList, liftListItem } from 'prosemirror-schema-list';\nimport { findParentNode } from 'prosemirror-utils';\nimport { EditorState } from 'prosemirror-state';\nimport { NodeType, Node, Schema } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nconst isList = (node: Node, schema: Schema) =>\n  node.type === schema.nodes.bullet_list ||\n  node.type === schema.nodes.ordered_list ||\n  node.type === schema.nodes.todo_list;\n\nexport const toggleList = function toggleList(\n  listType: NodeType,\n  itemType: NodeType\n) {\n  return (state: EditorState, dispatch: EditorView['dispatch']) => {\n    const { schema, selection } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n\n    if (!range) {\n      return false;\n    }\n\n    const parentList = findParentNode(node => isList(node, schema))(selection);\n\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n      if (parentList.node.type === listType) {\n        return liftListItem(itemType)(state, dispatch);\n      }\n\n      if (\n        isList(parentList.node, schema) &&\n        listType.validContent(parentList.node.content)\n      ) {\n        const { tr } = state;\n        tr.setNodeMarkup(parentList.pos, listType);\n\n        if (dispatch) {\n          dispatch(tr);\n        }\n\n        return false;\n      }\n    }\n\n    return wrapInList(listType)(state, dispatch);\n  };\n};\n","import { MenuItem } from '../../types';\nimport { MarkType, NodeType } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\nimport { Plugin } from 'prosemirror-state';\nimport { nodeIsActive, markIsActive } from '../utils';\n\nclass Menu {\n  items: MenuItem[];\n  editorView: EditorView;\n  onUpdate: (items: string[]) => any;\n\n  constructor(\n    items: MenuItem[],\n    editorView: EditorView,\n    onUpdate: (items: string[]) => any\n  ) {\n    this.items = items;\n    this.editorView = editorView;\n    this.onUpdate = onUpdate;\n  }\n\n  markActive(type: MarkType | NodeType): boolean {\n    const { state } = this.editorView;\n\n    if (type instanceof NodeType) {\n      return nodeIsActive(state, type).isActive;\n    }\n\n    return markIsActive(state, type);\n  }\n\n  update() {\n    const activeItems = this.items.filter(item => this.markActive(item.type));\n    if (activeItems.length) {\n      this.onUpdate(activeItems.map(i => i.name));\n    } else {\n      this.onUpdate([]);\n    }\n  }\n\n  destroy() {\n    this.onUpdate([]);\n  }\n}\n\nexport const menuPlugin = (\n  items: MenuItem[],\n  onUpdate: (items: string[]) => any\n) =>\n  new Plugin({\n    view: editorView => new Menu(items, editorView, onUpdate),\n  });\n","import { EditorState } from 'prosemirror-state';\nimport { MarkType } from 'prosemirror-model';\n\nexport const markIsActive = function(state: EditorState, type: MarkType) {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  }\n\n  return !!state.doc.rangeHasMark(from, to, type);\n};\n","import { Plugin } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nexport const placeholderPlugin = new Plugin({\n  state: {\n    init() {\n      return DecorationSet.empty;\n    },\n    apply(this: Plugin, tr, set: DecorationSet) {\n      // Adjust decoration positions to changes made by the transaction\n      set = set.map(tr.mapping, tr.doc);\n      // See if the transaction adds or removes any placeholders\n      let action = tr.getMeta(this);\n      if (action && action.add) {\n        let widget = document.createElement('div');\n        widget.className = 'image__placeholder';\n        let loader = document.createElement('div');\n        loader.className = 'loader';\n        widget.appendChild(loader);\n        let deco = Decoration.widget(action.add.pos, widget, {\n          id: action.add.id,\n        });\n        set = set.add(tr.doc, [deco]);\n      } else if (action && action.remove) {\n        set = set.remove(\n          set.find(undefined, undefined, spec => spec.id === action.remove.id)\n        );\n      }\n      return set;\n    },\n  },\n  props: {\n    decorations(this: Plugin, state) {\n      return this.getState(state);\n    },\n  },\n});\n\nexport const findPlaceholder = function(state: EditorState, id: {}) {\n  let decos = placeholderPlugin.getState(state);\n  let found = decos.find(undefined, undefined, spec => spec.id === id);\n  return found.length ? found[0].from : null;\n};\n","import { placeholderPlugin, findPlaceholder } from './placeholder';\nimport { EditorView } from 'prosemirror-view';\nimport { ImageUploadEndpoint } from 'types';\n\nexport const fileUpload = (\n  view: EditorView,\n  images: File[],\n  endpoint: ImageUploadEndpoint,\n  position: number,\n  onError: (errors: string) => any\n): boolean => {\n  let id = {};\n  const confirmResult = window.confirm(\n    endpoint.alertMessage || 'I am authorised to use this content'\n  );\n  if (!confirmResult) {\n    return false;\n  }\n\n  const tr = view.state.tr;\n  tr.setMeta(placeholderPlugin, { add: { id, pos: position } });\n  tr.setSelection(tr.selection);\n  view.dispatch(tr);\n  const { schema } = view.state;\n\n  images.forEach(image => {\n    const pos = findPlaceholder(view.state, id);\n    if (!pos) return;\n    const formData = new FormData();\n    formData.append('image', image);\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.open('POST', endpoint.url, true);\n    xhr.setRequestHeader('X-CSRF-TOKEN', endpoint.csrfToken);\n    xhr.onerror = () => {\n      const transaction = view.state.tr.setMeta(placeholderPlugin, {\n        remove: { id },\n      });\n      onError('Sorry something went wrong');\n      view.dispatch(transaction);\n    };\n\n    xhr.onload = () => {\n      let transaction;\n      let jsonBody;\n      try {\n        jsonBody = JSON.parse(xhr.response);\n      } catch {\n        jsonBody = { errors: 'Sorry something went wrong' };\n      }\n      if ([200, 201].includes(xhr.status)) {\n        const node = schema.nodes.image.create({\n          src: jsonBody.data.url,\n        });\n\n        transaction = view.state.tr\n          .replaceWith(pos, pos, node)\n          .setMeta(placeholderPlugin, { remove: { id } });\n      } else {\n        transaction = view.state.tr.setMeta(placeholderPlugin, {\n          remove: { id },\n        });\n        onError(jsonBody.errors);\n      }\n      view.dispatch(transaction);\n    };\n    xhr.send(formData);\n  });\n\n  return true;\n};\n","import { Decoration, DecorationSet } from 'prosemirror-view';\nimport { Node } from 'prosemirror-model';\nimport { Language } from '../../types';\nimport low from 'lowlight/lib/core';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport { findBlockNodes } from 'prosemirror-utils';\nimport { flattenDeep } from 'lodash';\n\n//@ts-ignore\nimport javascript from 'highlight.js/lib/languages/javascript';\n//@ts-ignore\nimport python from 'highlight.js/lib/languages/python';\n//@ts-ignore\nimport r from 'highlight.js/lib/languages/r';\n//@ts-ignore\nimport css from 'highlight.js/lib/languages/css';\n//@ts-ignore\nimport java from 'highlight.js/lib/languages/java';\n\nfunction getDecorations({ doc, name }: { doc: Node; name: string }) {\n  const decorations: Decoration[] = [];\n  const languages: Language[] = [];\n  const blocks = findBlockNodes(doc).filter(\n    item => item.node.type.name === name\n  );\n\n  function parseNodes(nodes: lowlight.HastNode[], className = []) {\n    return nodes.map(node => {\n      const classes = [\n        ...className,\n        //@ts-ignore\n        ...(node.properties ? node.properties.className : []),\n      ];\n\n      //@ts-ignore\n      if (node.children) {\n        //@ts-ignore\n        return parseNodes(node.children, classes);\n      }\n\n      return {\n        //@ts-ignore\n        text: node.value,\n        classes,\n      };\n    });\n  }\n\n  blocks.forEach(block => {\n    let startPos = block.pos + 1;\n    const { value: nodes, language, relevance } = low.highlightAuto(\n      block.node.textContent\n    );\n\n    if (relevance > 1) {\n      if (language && language !== block.node.attrs.params) {\n        languages.push({ language, pos: block.pos, type: block.node.type });\n      }\n\n      flattenDeep(parseNodes(nodes))\n        .map(node => {\n          const from = startPos;\n          const to = from + node.text.length;\n\n          startPos = to;\n\n          return {\n            ...node,\n            from,\n            to,\n          };\n        })\n        .forEach(node => {\n          const decoration = Decoration.inline(node.from, node.to, {\n            class: node.classes.join(' '),\n          });\n          decorations.push(decoration);\n        });\n    }\n  });\n\n  return { decorations: DecorationSet.create(doc, decorations), languages };\n}\n\nexport const highlightPlugin = ({ name }: { name: string }) => {\n  low.registerLanguage('javascript', javascript);\n  low.registerLanguage('python', python);\n  low.registerLanguage('r', r);\n  low.registerLanguage('css', css);\n  low.registerLanguage('java', java);\n  const key = new PluginKey('highlight');\n  return new Plugin({\n    key,\n    state: {\n      init: (_, { doc }) => getDecorations({ doc, name }),\n      apply: (transaction, decorationSet, oldState, state) => {\n        const nodeName = state.selection.$head.parent.type.name;\n        const previousNodeName = oldState.selection.$head.parent.type.name;\n\n        if (\n          transaction.docChanged &&\n          [nodeName, previousNodeName].includes(name)\n        ) {\n          return getDecorations({ doc: transaction.doc, name });\n        }\n\n        const decorations = decorationSet.decorations || decorationSet;\n        return decorations.map(transaction.mapping, transaction.doc);\n      },\n    },\n    props: {\n      decorations(this: Plugin, state) {\n        const decorationSet = this.getState(state);\n        return decorationSet.decorations || decorationSet;\n      },\n    },\n    view: _view => {\n      return {\n        update: (view, prevState) => {\n          const highlight = key.get(prevState);\n          if (highlight) {\n            const { languages } = highlight.getState(view.state) as {\n              languages: Language[];\n            };\n            if (languages && languages.length) {\n              languages.forEach(lang => {\n                const transaction = view.state.tr.setNodeMarkup(\n                  lang.pos,\n                  lang.type,\n                  { params: lang.language }\n                );\n                view.dispatch(transaction);\n              });\n            }\n          }\n        },\n      };\n    },\n  });\n};\n","import { Schema, MarkType, NodeType } from 'prosemirror-model';\nimport { keymap } from 'prosemirror-keymap';\nimport { inputRules, InputRule } from 'prosemirror-inputrules';\n\nclass BaseType {\n  schema: Schema;\n  constructor(schema: Schema) {\n    this.schema = schema;\n  }\n\n  get name() {\n    return '';\n  }\n\n  get label() {\n    return '';\n  }\n\n  get icon() {\n    return '';\n  }\n\n  get inToolbar() {\n    return true;\n  }\n\n  get command() {\n    return (_state: any, _dispatch: any) => {};\n  }\n\n  get shortcuts() {\n    return {};\n  }\n\n  get rules() {\n    return [] as InputRule[];\n  }\n\n  get type(): MarkType | NodeType | null {\n    return this._type;\n  }\n\n  protected get _type(): MarkType | NodeType | null {\n    return null;\n  }\n\n  getPlugins() {\n    if (this._type) {\n      return [keymap(this.shortcuts), inputRules({ rules: this.rules })];\n    }\n\n    return [];\n  }\n\n  getToolbarItem() {\n    if (this._type && this.inToolbar && this.command) {\n      return {\n        name: this.name,\n        icon: this.icon,\n        command: this.command,\n        type: this.type,\n        label: this.label,\n      };\n    }\n\n    return null;\n  }\n}\n\nexport default BaseType;\n","import { MarkType } from 'prosemirror-model';\nimport BaseType from '../BaseType';\n\nclass Mark extends BaseType {\n  get type(): MarkType {\n    return this._type as MarkType;\n  }\n\n  protected get _type() {\n    return this.schema.marks[this.name];\n  }\n}\n\nexport default Mark;\n","import { linkInputRule, markdownLinkInputRule } from '../utils';\nimport Mark from './Mark';\n\nconst URL_REGEX = /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*))\\s$/g;\nconst MARKDOWN_URL_REGX = /\\[(.+)\\]\\((https?[^ ]+)(?: \"(.+)\")?\\)$/;\n\nclass Link extends Mark {\n  get name() {\n    return 'link';\n  }\n\n  get rules() {\n    return [\n      linkInputRule(URL_REGEX, this.type),\n      markdownLinkInputRule(MARKDOWN_URL_REGX, this.type),\n    ];\n  }\n\n  get inToolbar() {\n    return false;\n  }\n}\n\nexport default Link;\n","import Strong from './Strong';\nimport Emphasis from './Emphasis';\nimport InlineCode from './InlineCode';\nimport Link from './Link';\nimport { flatMap, compact } from 'lodash';\nimport { Schema } from 'prosemirror-model';\n\nconst MARKS = [Strong, Emphasis, InlineCode, Link];\n\nexport const plugins = (schema: Schema) => {\n  return flatMap(MARKS, Mark => new Mark(schema).getPlugins());\n};\n\nexport const toolbarItems = (schema: Schema) => {\n  return compact(MARKS.map(Mark => new Mark(schema).getToolbarItem()));\n};\n","import { toggleMark } from 'prosemirror-commands';\nimport { markInputRule } from '../utils';\nimport Mark from './Mark';\n\nclass Strong extends Mark {\n  get name() {\n    return 'strong';\n  }\n\n  get label() {\n    return 'Toggle bold';\n  }\n\n  get icon() {\n    return 'Bold';\n  }\n\n  get command() {\n    return toggleMark(this.type);\n  }\n\n  get shortcuts() {\n    return {\n      'Mod-b': toggleMark(this.type),\n      'Mod-B': toggleMark(this.type),\n    };\n  }\n\n  get rules() {\n    return [markInputRule(/(?:\\*\\*|__)([^*_]+)(?:\\*\\*|__)$/, this.type)];\n  }\n}\n\nexport default Strong;\n","import { toggleMark } from 'prosemirror-commands';\nimport { markInputRule } from '../utils';\nimport Mark from './Mark';\n\nclass Emphasis extends Mark {\n  get name() {\n    return 'em';\n  }\n\n  get label() {\n    return 'Toggle emphasis';\n  }\n\n  get icon() {\n    return 'Italic';\n  }\n\n  get shortcuts() {\n    return {\n      'Mod-i': toggleMark(this.type),\n      'Mod-I': toggleMark(this.type),\n    };\n  }\n\n  get rules() {\n    return [\n      markInputRule(/(?:^|[^_])(_([^_]+)_)$/, this.type),\n      markInputRule(/(?:^|[^*])(\\*([^*]+)\\*)$/, this.type),\n    ];\n  }\n\n  get command() {\n    return toggleMark(this.type);\n  }\n}\n\nexport default Emphasis;\n","import { toggleMark } from 'prosemirror-commands';\nimport { markInputRule } from '../utils';\nimport Mark from './Mark';\n\nclass InlineCode extends Mark {\n  get name() {\n    return 'code';\n  }\n\n  get label() {\n    return 'Toggle code';\n  }\n\n  get icon() {\n    return 'Code';\n  }\n\n  get shortcuts() {\n    return {\n      'Mod-`': toggleMark(this.type),\n    };\n  }\n\n  get rules() {\n    return [markInputRule(/(?:`)([^`]+)(?:`)$/, this.type)];\n  }\n\n  get command() {\n    return toggleMark(this.type);\n  }\n}\n\nexport default InlineCode;\n","import { InputRule } from 'prosemirror-inputrules';\nimport { MarkType } from 'prosemirror-model';\n\nexport const linkInputRule = function(regexp: RegExp, markType: MarkType) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const tr = state.tr.insertText(match[0], start, end);\n    const mark = markType.create({ href: match[1] });\n    return tr.addMark(start, start + match[1].length, mark);\n  });\n};\n","import { NodeType } from 'prosemirror-model';\nimport BaseType from '../BaseType';\n\nclass Node extends BaseType {\n  get type(): NodeType {\n    return this._type as NodeType;\n  }\n\n  protected get _type() {\n    return this.schema.nodes[this.name];\n  }\n\n  get paragraphType() {\n    return this.schema.nodes.paragraph;\n  }\n\n  get listItemType() {\n    return this.schema.nodes.list_item;\n  }\n}\n\nexport default Node;\n","import { textblockTypeInputRule } from 'prosemirror-inputrules';\nimport { toggleBlockType } from '../utils';\nimport Node from './Node';\n\nconst LEVELS = [1, 2, 3, 4, 5, 6];\n\nclass Heading extends Node {\n  get name() {\n    return 'heading';\n  }\n\n  get label() {\n    return 'Toggle heading';\n  }\n\n  get icon() {\n    return 'Heading';\n  }\n\n  get command() {\n    return toggleBlockType(this.type, this.paragraphType);\n  }\n\n  get rules() {\n    return LEVELS.map(l =>\n      textblockTypeInputRule(new RegExp(`^(#{1,${l}})\\\\s$`), this.type, () => ({\n        level: l,\n      }))\n    );\n  }\n}\n\nexport default Heading;\n","import Blockquote from './Blockquote';\nimport Heading from './Heading';\nimport BulletList from './BulletList';\nimport OrderedList from './OrderedList';\nimport CodeBlock from './CodeBlock';\nimport { flatMap, compact } from 'lodash';\nimport { Schema } from 'prosemirror-model';\n\nconst NODES = [Blockquote, Heading, BulletList, OrderedList, CodeBlock];\n\nexport const plugins = (schema: Schema) => {\n  return flatMap(NODES, Node => new Node(schema).getPlugins());\n};\n\nexport const toolbarItems = (schema: Schema) => {\n  return compact(NODES.map(Node => new Node(schema).getToolbarItem()));\n};\n","import { wrappingInputRule } from 'prosemirror-inputrules';\nimport { toggleWrap } from '../utils';\nimport Node from './Node';\n\nclass Blockquote extends Node {\n  get name() {\n    return 'blockquote';\n  }\n\n  get label() {\n    return 'Toggle block quote';\n  }\n\n  get icon() {\n    return 'Quote';\n  }\n\n  get command() {\n    return toggleWrap(this.type);\n  }\n\n  get rules() {\n    return [wrappingInputRule(/^\\s*>\\s$/, this.type)];\n  }\n}\n\nexport default Blockquote;\n","import { wrapIn, lift } from 'prosemirror-commands';\nimport { NodeType } from 'prosemirror-model';\nimport { nodeIsActive } from './nodeIsActive';\nimport { EditorState } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\n\nexport const toggleWrap = function(type: NodeType) {\n  return (state: EditorState, dispatch: EditorView['dispatch']) => {\n    const { isActive } = nodeIsActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n};\n","import { wrappingInputRule } from 'prosemirror-inputrules';\nimport { toggleList } from '../utils';\nimport Node from './Node';\n\nclass BulletList extends Node {\n  get name() {\n    return 'bullet_list';\n  }\n\n  get label() {\n    return 'Toggle bullet list';\n  }\n\n  get icon() {\n    return 'UnorderedList';\n  }\n\n  get command() {\n    return toggleList(this.type, this.listItemType);\n  }\n\n  get rules() {\n    return [wrappingInputRule(/^\\s*([-+*])\\s$/, this.type)];\n  }\n}\n\nexport default BulletList;\n","import { wrappingInputRule } from 'prosemirror-inputrules';\nimport { toggleList } from '../utils';\nimport Node from './Node';\n\nclass OrderedList extends Node {\n  get name() {\n    return 'ordered_list';\n  }\n\n  get label() {\n    return 'Toggle ordered list';\n  }\n\n  get icon() {\n    return 'OrderedList';\n  }\n\n  get command() {\n    return toggleList(this.type, this.listItemType);\n  }\n\n  get rules() {\n    return [\n      wrappingInputRule(\n        /^(\\d+)\\.\\s$/,\n        this.type,\n        match => ({ order: +match[1] }),\n        (match, node) => node.childCount + node.attrs.order === +match[1]\n      ),\n    ];\n  }\n}\n\nexport default OrderedList;\n","import { textblockTypeInputRule } from 'prosemirror-inputrules';\nimport { toggleBlockType } from '../utils';\nimport Node from './Node';\n\nclass CodeBlock extends Node {\n  get name() {\n    return 'code_block';\n  }\n\n  get label() {\n    return 'Toggle code block';\n  }\n\n  get icon() {\n    return 'CodeBlock';\n  }\n\n  get command() {\n    return toggleBlockType(this.type, this.paragraphType);\n  }\n\n  get rules() {\n    return [textblockTypeInputRule(/^(```|~~~)$/, this.type)];\n  }\n}\n\nexport default CodeBlock;\n","import { MenuItem } from '../types';\nimport { toolbarItems as markToolbarItems } from '../Editor/Marks';\nimport { toolbarItems as nodeToolbarItems } from '../Editor/Nodes';\nimport { Schema } from 'prosemirror-model';\n\nconst menuItems = (schema: Schema) =>\n  [...markToolbarItems(schema), ...nodeToolbarItems(schema)] as MenuItem[];\n\nexport default menuItems;\n","import { Icons as IconsType } from '../types';\nimport Bold from './Bold';\nimport Code from './Code';\nimport CodeBlock from './CodeBlock';\nimport Heading from './Heading';\nimport Image from './Image';\nimport Italic from './Italic';\nimport OrderedList from './OrderedList';\nimport Quote from './Quote';\nimport UnorderedList from './UnorderedList';\n\nconst Icons: IconsType = {\n  Bold,\n  Code,\n  CodeBlock,\n  Heading,\n  Image,\n  Italic,\n  OrderedList,\n  Quote,\n  UnorderedList,\n};\n\nexport default Icons;\n","import React from 'react';\n\nconst Bold = () => (\n  <svg className=\"a-svg-icon a-svg-icon--bold\" viewBox=\"0 0 32 32\">\n    <path\n      d=\"M24.2,17.4c-0.9-0.9-2-1.7-3.3-2.1c1.8-1,3.6-3,3.6-6.7c0-0.1,0.2-3.5-2.1-5.9C20.8,0.9,18.5,0,15.5,0H9v0H7\n  v32h0.8v0H16c0.1,0,0.1,0,0.2,0c1.5,0,5.3-0.1,7.8-2.6c1.5-1.5,2.3-3.6,2.3-6.1C26.3,22.8,26.4,19.8,24.2,17.4z M15.5,2\n  c2.4,0,4.2,0.6,5.4,1.9c1.7,1.8,1.6,4.4,1.6,4.5c0,2.6-1,4.3-3,5.3c-1.1,0.5-2.4,0.8-4,0.8H9V2H15.5z M24.2,23.1l0,0.1\n  c0,2-0.6,3.6-1.7,4.8c-2,2-5.5,2-6.6,2H9V16.5h6.8c3.2-0.1,5.5,0.7,6.9,2.2C24.4,20.6,24.2,23.1,24.2,23.1z\"\n    />\n  </svg>\n);\n\nexport default Bold;\n","import React from 'react';\n\nconst Code = () => (\n  <svg className=\"a-svg-icon a-svg-icon--code\" viewBox=\"0 0 32 32\">\n    <polygon points=\"13.1,6.7 11.6,5.3 1,16 11.7,26.7 13.1,25.3 3.8,16 \" />\n    <polygon points=\"20.4,5.3 19,6.7 28.2,16 19,25.3 20.4,26.7 31,16 \" />\n  </svg>\n);\n\nexport default Code;\n","import React from 'react';\n\nconst CodeBlock = () => (\n  <svg viewBox=\"0 0 32 32\">\n    <path\n      fill=\"#3A343A\"\n      d=\"M11.97,1.02L10.69,1v0C10.47,1,8.7,0.85,7.48,1.96c-0.6,0.55-0.92,1.31-0.92,2.2v9.66  c0,0.42-0.15,0.6-0.27,0.72C5.77,15.06,3.97,15,3.97,15v2c0,0,1.79-0.07,2.33,0.46c0.12,0.12,0.27,0.3,0.27,0.72v9.66  c0,0.89,0.32,1.65,0.92,2.2C8.7,31.15,10.47,31,10.69,31v0l1.28-0.02V29L10.69,29c-0.33,0.02-1.38,0-1.86-0.44  c-0.12-0.11-0.27-0.3-0.27-0.72v-9.66c0-0.87-0.31-1.63-0.9-2.18c0.58-0.55,0.9-1.31,0.9-2.18V4.16c0-0.42,0.14-0.61,0.27-0.72  C9.31,2.99,10.36,2.97,10.69,3v0L11.97,3V1.02z\"\n    />\n    <path\n      fill=\"#3A343A\"\n      d=\"M19.98,1.02L21.26,1v0c0.22,0,1.99-0.15,3.21,0.97c0.6,0.55,0.92,1.31,0.92,2.2v9.66  c0,0.42,0.15,0.6,0.27,0.72c0.52,0.52,2.33,0.46,2.33,0.46v2c0,0-1.79-0.07-2.33,0.46c-0.12,0.12-0.27,0.3-0.27,0.72v9.66  c0,0.89-0.32,1.65-0.92,2.2C23.25,31.15,21.49,31,21.26,31v0l-1.28-0.02V29L21.26,29c0.33,0.02,1.38,0,1.86-0.44  c0.12-0.11,0.27-0.3,0.27-0.72v-9.66c0-0.87,0.31-1.63,0.9-2.18c-0.58-0.55-0.9-1.31-0.9-2.18V4.16c0-0.42-0.14-0.61-0.27-0.72  C22.64,2.99,21.59,2.97,21.26,3v0L19.98,3V1.02z\"\n    />\n  </svg>\n);\n\nexport default CodeBlock;\n","import React from 'react';\n\nconst Heading = () => (\n  <svg className=\"a-svg-icon a-svg-icon--heading\" viewBox=\"0 0 32 32\">\n    <polygon points=\"25,0 25,15 7,15 7,0 5,0 5,32 7,32 7,17 25,17 25,32 27,32 27,0 \" />\n  </svg>\n);\n\nexport default Heading;\n","import React from 'react';\n\nconst Image = () => (\n  <svg className=\"a-svg-icon a-svg-icon--italic\" viewBox=\"0 0 32 32\">\n    <circle cx=\"21.5\" cy=\"11.5\" r=\"4.5\" />\n    <polygon points=\"32,6 32,0 0,0 0,32 32,32 32,11 30,11 30,30 16,20 2,30 2,2 30,2 30,6\" />\n  </svg>\n);\n\nexport default Image;\n","import React from 'react';\n\nconst Italic = () => (\n  <svg className=\"a-svg-icon a-svg-icon--italic\" viewBox=\"0 0 32 32\">\n    <polygon points=\"25.3,2 25.3,0 13.3,0 13.3,2 18.1,2 12.2,30 7,30 7,32 19,32 19,30 14.2,30 20.1,2 \" />\n  </svg>\n);\n\nexport default Italic;\n","import React from 'react';\n\nconst OrderedList = () => (\n  <svg className=\"a-svg-icon a-svg-icon--ordered-list\" viewBox=\"0 0 32 32\">\n    <rect x=\"10\" y=\"3\" width=\"22\" height=\"2\" />\n    <rect x=\"10\" y=\"15\" width=\"22\" height=\"2\" />\n    <rect x=\"10\" y=\"27\" width=\"22\" height=\"2\" />\n    <path\n      d=\"M3.8,25.1c-1,0-1.3,0.8-1.3,0.8l-1.3-0.7c0,0,0.7-1.6,2.7-1.6c1.5,0,2.9,0.8,2.9,2.4c0,1.1-0.9,1.4-0.9,1.4\n    s1,0.4,1,1.7c0,1.6-1.4,2.4-2.9,2.4c-2.2,0-2.8-1.8-2.8-1.8l1.4-0.8c0,0,0.3,1.1,1.4,1.1c0.7,0,1-0.4,1-0.9c0-0.6-0.5-0.9-1.3-0.9\n    H3.3v-1.3h0.3c0.6,0,1.3-0.2,1.3-0.9C4.9,25.5,4.5,25.1,3.8,25.1z\"\n    />\n    <path\n      d=\"M4.1,16C4.4,15.6,5,15,5,14.3c0-0.6-0.5-1.1-1.2-1.1c-1,0-1.3,1.1-1.3,1.1L1,13.8c0,0,0.6-2.3,2.8-2.3\n    c2,0,3,1.4,3,2.7c0,0.8-0.4,1.5-0.6,1.7L4.7,18h2.2v1.6H1.1L4.1,16z\"\n    />\n    <path d=\"M4.4,0.6H6v7.9H4.2V2.9L2.4,4.5l-1-1.3L4.4,0.6z\" />\n  </svg>\n);\n\nexport default OrderedList;\n","import React from 'react';\n\nconst Quote = () => (\n  <svg className=\"a-svg-icon a-svg-icon--quote\" viewBox=\"0 0 32 32\">\n    <path d=\"M11.1,26V15.9H5.6C6,12.3,8.3,9.5,12,9.5V5.8c-5.8,0-10.5,4.4-11,10.1l0,0V26H11.1z\" />\n    <path d=\"M20.9,5.8v10.1h5.5c-0.5,3.6-2.7,6.4-6.4,6.4V26c5.8,0,10.5-4.4,11-10.1l0,0V5.8L20.9,5.8z\" />\n  </svg>\n);\n\nexport default Quote;\n","import React from 'react';\n\nconst UnorderedList = () => (\n  <svg className=\"a-svg-icon a-svg-icon--unordered-list\" viewBox=\"0 0 32 32\">\n    <circle cx=\"2.5\" cy=\"4\" r=\"2.5\" />\n    <circle cx=\"2.5\" cy=\"16\" r=\"2.5\" />\n    <circle cx=\"2.5\" cy=\"28\" r=\"2.5\" />\n    <rect x=\"8\" y=\"3\" width=\"24\" height=\"2\" />\n    <rect x=\"8\" y=\"15\" width=\"24\" height=\"2\" />\n    <rect x=\"8\" y=\"27\" width=\"24\" height=\"2\" />\n  </svg>\n);\n\nexport default UnorderedList;\n","import React, { FunctionComponent } from 'react';\nimport { ToolbarItem } from '../types';\nimport classNames from 'classnames';\nimport Icons from '../Icons';\n\nconst Item: FunctionComponent<ToolbarItem> = ({\n  item,\n  item: { icon, name },\n  isActive,\n  onClick,\n}) => {\n  const Icon = Icons[icon];\n  return (\n    <button\n      className={classNames('item', { 'item--active': isActive })}\n      data-item={name}\n      onClick={() => onClick(item)}\n      type=\"button\"\n      aria-label={item.label}\n      title={item.label}\n    >\n      <Icon />\n    </button>\n  );\n};\n\nexport default Item;\n","import React, { ChangeEvent } from 'react';\nimport { fileUpload } from '../Editor/Plugins/fileUpload';\nimport Icons from '../Icons';\n\nconst ImageUpload = ({\n  editor,\n  imageUploadEndpoint,\n  onError,\n}: {\n  editor: any;\n  imageUploadEndpoint: any;\n  onError: any;\n}) => {\n  const onImageUpload = (e: ChangeEvent) => {\n    if (!imageUploadEndpoint) return;\n    if (!editor) return;\n    if (!e.target) return;\n    const target = e.target as HTMLInputElement;\n    if (!target.files) return;\n\n    e.preventDefault();\n\n    fileUpload(\n      editor,\n      Array.from(target.files),\n      imageUploadEndpoint,\n      editor.state.tr.selection.from,\n      onError\n    );\n    editor.focus();\n    target.value = '';\n  };\n\n  return (\n    <div className=\"fileUploadWrapper\">\n      <input\n        type=\"file\"\n        accept=\".jpg,.jpeg,.png,.gif\"\n        onChange={onImageUpload}\n      />\n      <button\n        data-item=\"image\"\n        className=\"item fileUploadWrapper--button\"\n        aria-label=\"Upload image\"\n        title=\"Upload image\"\n      >\n        <Icons.Image />\n      </button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useMemo } from 'react';\nimport Item from './Item';\nimport { FunctionComponent } from 'react';\nimport menuItems from './menuItems';\nimport { Toolbar as ToolbarType } from '../types';\nimport ImageUpload from './ImageUpload';\n\nconst Toolbar: FunctionComponent<ToolbarType> = ({\n  onClick,\n  activeOptions,\n  editor,\n  imageUploadEndpoint,\n  disabledItems = [],\n  onError,\n}) => {\n  const menuItemsToRender = useMemo(() => {\n    return menuItems(editor.state.schema).filter(\n      i => !disabledItems.includes(i.name)\n    );\n  }, [disabledItems, editor.state.schema]);\n\n  return (\n    <div className=\"toolbar\">\n      {menuItemsToRender.map(item => (\n        <Item\n          key={item.name}\n          item={item}\n          onClick={onClick}\n          isActive={activeOptions.includes(item.name)}\n        />\n      ))}\n\n      {!disabledItems.includes('image') && (\n        <ImageUpload\n          editor={editor}\n          imageUploadEndpoint={imageUploadEndpoint}\n          onError={onError}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Toolbar);\n","import React, { FunctionComponent } from 'react';\nimport { ContextualHelp as ContextualHelpType } from '../types';\n\nconst ContextualHelp: FunctionComponent<ContextualHelpType> = ({\n  activeOptions,\n}) => {\n  const helpText: { [key: string]: string } = {\n    code_block: 'Hold down shift and press enter to exit the code block',\n  };\n\n  return <p>{activeOptions.map(o => helpText[o])}</p>;\n};\n\nexport default ContextualHelp;\n","import React, {\n  FunctionComponent,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { MarkDownEditor as MarkDownEditorType, MenuItem } from './types';\nimport { createEditorView } from './Editor';\nimport { EditorView } from 'prosemirror-view';\nimport Toolbar from './Toolbar';\nimport './index.scss';\nimport classNames from 'classnames';\nimport ContextualHelp from './ContextualHelp';\n\nconst MarkDownEditor: FunctionComponent<MarkDownEditorType> = ({\n  id,\n  name,\n  onChange = () => {},\n  value = '',\n  placeholder = 'Enter text',\n  classes = '',\n  imageUploadEndpoint,\n  onError = () => {},\n  disabledMarks = [],\n  disabledNodes = [],\n  inputRef,\n}) => {\n  const editorRef = useRef<HTMLDivElement>(null);\n  const [editor, setEditor] = useState<EditorView | null>(null);\n  const [markdownValue, setMarkdownValue] = useState<string>(value);\n  const [activeOptions, setActiveOptions] = useState<string[]>([]);\n  const disabledItems = useRef([...disabledMarks, ...disabledNodes]);\n  const activeOptionsRef = useRef(activeOptions);\n\n  const onInputChange = (md: string) => {\n    setMarkdownValue(md);\n    onChange(md);\n  };\n\n  const onToolbarChange = (options: string[]) => {\n    if (JSON.stringify(options) !== JSON.stringify(activeOptionsRef.current)) {\n      setActiveOptions(options);\n    }\n  };\n\n  const initEditor = () => {\n    if (editorRef.current) {\n      const editorView = createEditorView({\n        node: editorRef.current,\n        value,\n        onChange: onInputChange,\n        classes,\n        placeholder,\n        onToolbarChange: onToolbarChange,\n        imageUploadEndpoint,\n        onError: onError,\n        disabledNodes,\n        disabledMarks,\n      });\n\n      setEditor(editorView);\n    }\n  };\n\n  const onToolbarClick = useCallback(\n    ({ command }: MenuItem) => {\n      if (editor) {\n        editor.focus();\n        command(editor.state, editor.dispatch, editor);\n      }\n    },\n    [editor]\n  );\n\n  useEffect(() => {\n    activeOptionsRef.current = activeOptions;\n  }, [activeOptions]);\n\n  useEffect(() => {\n    if (inputRef) {\n      inputRef.current = editor;\n    }\n  }, [editor, inputRef]);\n\n  useEffect(() => {\n    if (value !== markdownValue && editor) {\n      editor.destroy();\n      initEditor();\n    }\n  }, [value]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    initEditor();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {editor && (\n        <Toolbar\n          activeOptions={activeOptions}\n          onClick={onToolbarClick}\n          editor={editor}\n          disabledItems={disabledItems.current}\n          imageUploadEndpoint={imageUploadEndpoint}\n          onError={onError}\n        />\n      )}\n      <div\n        id={id}\n        className={classNames({ hasPlaceholder: !markdownValue.length })}\n        ref={editorRef}\n      />\n      <ContextualHelp activeOptions={activeOptions} />\n      <input\n        type=\"hidden\"\n        value={markdownValue}\n        onChange={() => {}}\n        name={name}\n      />\n    </>\n  );\n};\n\nexport default MarkDownEditor;\n","import { CreateEditorViewOptions } from '../types';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport {\n  defaultMarkdownParser,\n  defaultMarkdownSerializer,\n  setupSchema,\n} from './markdown';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap, exitCode, setBlockType } from 'prosemirror-commands';\nimport { history, undo, redo } from 'prosemirror-history';\nimport { splitListItem } from 'prosemirror-schema-list';\nimport {\n  editorPlugin,\n  pastePlugin,\n  menuPlugin,\n  imageDropPlugin,\n  placeholderPlugin,\n  highlightPlugin,\n} from './Plugins';\nimport toolbarItems from '../Toolbar/menuItems';\nimport { plugins as markPlugins } from './Marks';\nimport { plugins as nodePlugins } from './Nodes';\n\nconst createEditorView = ({\n  node,\n  value,\n  onChange,\n  classes,\n  placeholder,\n  onToolbarChange,\n  imageUploadEndpoint,\n  disabledMarks,\n  disabledNodes,\n  onError,\n}: CreateEditorViewOptions): EditorView => {\n  const schema = setupSchema({ disabledMarks, disabledNodes });\n  const LIST_ITEM_TYPE = schema.nodes.list_item;\n  const toggleBlockIfEmpty = (\n    state: EditorState,\n    dispatch: EditorView['dispatch']\n  ) => {\n    let {\n      $from: { parent },\n    } = state.selection;\n    if ([schema.nodes.heading, schema.nodes.code_block].includes(parent.type)) {\n      if (!parent.textContent.length) {\n        setBlockType(schema.nodes.paragraph)(state, dispatch);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const plugins = [\n    history(),\n    keymap({\n      'Mod-z': undo,\n      'Mod-y': redo,\n      Enter: splitListItem(LIST_ITEM_TYPE),\n      Backspace: toggleBlockIfEmpty,\n    }),\n    keymap({\n      'Shift-Enter': exitCode,\n    }),\n    keymap(baseKeymap),\n    pastePlugin(schema, onError),\n    menuPlugin(toolbarItems(schema), onToolbarChange),\n    ...markPlugins(schema),\n    ...nodePlugins(schema),\n    editorPlugin(classes, placeholder),\n  ];\n\n  schema.nodes.code_block &&\n    plugins.push(highlightPlugin({ name: schema.nodes.code_block.name }));\n\n  imageUploadEndpoint &&\n    schema.nodes.image &&\n    plugins.push(\n      placeholderPlugin,\n      imageDropPlugin(imageUploadEndpoint, onError)\n    );\n\n  const editorView = new EditorView(node, {\n    state: EditorState.create({\n      schema,\n      doc: defaultMarkdownParser(schema).parse(value),\n      plugins,\n    }),\n    dispatchTransaction(transation: Transaction) {\n      const newState = editorView.state.apply(transation);\n      editorView.updateState(newState);\n      onChange(defaultMarkdownSerializer.serialize(editorView.state.doc));\n    },\n  });\n\n  return editorView;\n};\n\nexport { createEditorView };\n","import { Plugin } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { fileUpload } from './fileUpload';\nimport { ImageUploadEndpoint } from 'types';\n\nexport const imageDropPlugin = (\n  endpoint: ImageUploadEndpoint,\n  onError: (errors: string) => any\n) =>\n  new Plugin({\n    props: {\n      handleDOMEvents: {\n        drop(view: EditorView, event: Event) {\n          const dragEvent = event as DragEvent;\n          if (!dragEvent.dataTransfer) return false;\n          const hasFiles =\n            dragEvent.dataTransfer.files && dragEvent.dataTransfer.files.length;\n          if (!hasFiles) {\n            return false;\n          }\n\n          const images = Array.from(dragEvent.dataTransfer.files).filter(file =>\n            /image/i.test(file.type)\n          );\n\n          if (images.length === 0) {\n            return false;\n          }\n\n          event.preventDefault();\n\n          const coordinates = view.posAtCoords({\n            left: dragEvent.clientX,\n            top: dragEvent.clientY,\n          });\n\n          if (!coordinates) return false;\n\n          return fileUpload(view, images, endpoint, coordinates.pos, onError);\n        },\n      },\n    },\n  });\n"],"names":["IGNORED_NODES","IGNORED_TOKENS","MARKDOWN_IT_RULES","code","heading","blockquote","code_block","fence","bullet_list","ordered_list","hr","image","link","defaultMarkdownParser","schema","disabledTokens","disabledNodes","disabledMarks","tokens","omit","initialDefaultMarkdownParser","md","markdownit","html","tokensToDisable","compact","map","t","disable","MarkdownParser","defaultMarkdownSerializer","initialDefaultMarkdownSerializer","nodes","state","node","write","attrs","params","text","textContent","ensureNewLine","closeBlock","editorPlugin","classes","placeholder","Plugin","props","attributes","length","EDITOR_CLASS","pastePlugin","onError","clipboardTextParser","fragment","parse","content","Slice","maxOpen","transformPastedHTML","includes","markInputRule","regexp","markType","getAttrs","InputRule","match","start","end","Function","tr","m","markEnd","markStart","matchStart","indexOf","matchEnd","textStart","lastIndexOf","textEnd","marks","doc","nodesBetween","pos","mark","nodeSize","getMarksBetween","filter","item","type","excludes","addMark","create","removeStoredMark","markdownLinkInputRule","insertText","href","title","nodeIsActive","findSelectedNodeOfType","selection","findParentNode","isActive","toggleBlockType","toggletype","dispatch","setBlockType","isList","todo_list","toggleList","listType","itemType","range","$from","blockRange","$to","parentList","depth","liftListItem","validContent","setNodeMarkup","wrapInList","Menu","items","editorView","onUpdate","markActive","this","NodeType","from","to","empty","isInSet","storedMarks","rangeHasMark","markIsActive","update","activeItems","_this","i","name","destroy","placeholderPlugin","init","DecorationSet","apply","set","mapping","action","getMeta","add","widget","document","createElement","className","loader","appendChild","deco","Decoration","id","remove","find","undefined","spec","decorations","getState","fileUpload","view","images","endpoint","position","window","confirm","alertMessage","setMeta","setSelection","forEach","found","findPlaceholder","formData","FormData","append","xhr","XMLHttpRequest","withCredentials","open","url","setRequestHeader","csrfToken","onerror","transaction","onload","jsonBody","JSON","response","errors","status","src","data","replaceWith","send","getDecorations","languages","findBlockNodes","block","startPos","low","highlightAuto","value","language","relevance","push","flattenDeep","parseNodes","properties","children","decoration","inline","join","BaseType","getPlugins","_type","keymap","shortcuts","inputRules","rules","getToolbarItem","inToolbar","command","icon","label","_state","_dispatch","Mark","URL_REGEX","MARKDOWN_URL_REGX","MARKS","toggleMark","Node","paragraph","list_item","LEVELS","NODES","lift","wrapIn","wrappingInputRule","paragraphType","l","textblockTypeInputRule","RegExp","level","listItemType","order","childCount","menuItems","markToolbarItems","nodeToolbarItems","Icons","Bold","React","viewBox","d","Code","points","CodeBlock","fill","Heading","Image","cx","cy","r","Italic","OrderedList","x","y","width","height","Quote","UnorderedList","Item","onClick","Icon","classNames","ImageUpload","editor","imageUploadEndpoint","accept","onChange","e","target","files","preventDefault","Array","focus","Toolbar","activeOptions","disabledItems","menuItemsToRender","useMemo","key","memo","ContextualHelp","helpText","o","inputRef","editorRef","useRef","useState","setEditor","markdownValue","setMarkdownValue","setActiveOptions","activeOptionsRef","onInputChange","onToolbarChange","options","stringify","current","initEditor","initialSchema","isolating","setupSchema","LIST_ITEM_TYPE","plugins","history","undo","redo","Enter","splitListItem","Backspace","parent","exitCode","baseKeymap","toolbarItems","flatMap","markPlugins","nodePlugins","registerLanguage","javascript","python","css","java","PluginKey","_","decorationSet","oldState","docChanged","$head","_view","prevState","highlight","get","lang","highlightPlugin","handleDOMEvents","drop","event","dragEvent","dataTransfer","file","test","coordinates","posAtCoords","left","clientX","top","clientY","imageDropPlugin","EditorView","EditorState","dispatchTransaction","transation","newState","updateState","serialize","createEditorView","onToolbarClick","useCallback","useEffect","hasPlaceholder","ref"],"mappings":"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"}